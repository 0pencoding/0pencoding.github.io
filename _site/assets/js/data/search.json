[ { "title": "우아한 테크코스 3기 : 1차 온라인 코딩 테스트 후기", "url": "/posts/WoowaCourse_3rd_1st_codingtest/", "categories": "Problem Solving, Conding Test, Woowa", "tags": "coding test, review, woowa, c++", "date": "2020-11-14 00:00:00 +0900", "snippet": "우아한 테크코스 3기를 지원했다. 사실 지원하고 1차 온라인 코딩 테스트는 지난주 주말에 치뤘는데, 블로그 정비를 하다보니 후기가 늦어졌다. 원래도 1차 코딩 테스트는 크게 어렵지 않다고 들었기 때문에 많이 긴장하지는 않았는데, 열심히 준비하긴했다..ㅎㅎ 어쨌든, 이번 포스팅에서는 왜 우아한 테크코스에 지원했고, 1차 온라인 코딩 테스트가 어땠는지에 대한 후기를 한 번 풀어보려한다.1. 지원 동기사실 교육 기간 10개월이라는 이야기를 들었을때 지원을 할까말까 많이 고민했었다. 하지만 현재 같은 분야에 종사하고 있는 친언니와 이..." }, { "title": "프로그래머스 고득점 Kit : 도둑질", "url": "/posts/stealing/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level4, algorithm, dynamic programming, c++", "date": "2020-08-10 00:00:00 +0900", "snippet": "이 문제는 첫 level4 문제이자, 처음으로(?) 내가 푼 문제가 아니다. 처음이 아닐지도 모르지만, 체감상… 여튼, 생각할 시간이 충분하지 못해서 이 문제를 푼 친구에게 알고리즘을 듣고 해당 알고리즘대로 내가 다시 풀어보았던 문제이다. 좀 더 생각해보면서 충분히 고민하고 싶었는데 이건 내가 미리미리 문제를 풀지 못한 죄이기 때문에 어쩔 수 없이 패스..ㅠ 근데 문제 풀이를 들으면서 DP 문제에 대해서 조금은 감을 잡은 것 같다. 어떤 문제에 DP 풀이를 써야하는지 조금 감을 잡은 느낌..? 더 많이 연습하면서 익혀야겠지만 ..." }, { "title": "프로그래머스 고득점 Kit : 등굣길", "url": "/posts/way_to-school/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, dynamic programming, c++", "date": "2020-08-07 00:00:00 +0900", "snippet": "이 문제는 예전에 남자친구가 나에게 냈었던 문제였기 때문에 알고리즘 자체는 그 때 풀었던대로 빠르게 세울 수 있었다. 그런데 빨리 풀겠다는 자만심 때문이었는지 알고리즘을 세우는 데에 있어서 조그만 실수를 한 부분 때문에 어디가 잘못되었는지 찾느라고 30분 정도를 소비한 것 같다. 이미 알고있는 문제라고, level3 문제 좀 푼다고 자만하면 안되는데 인간은 정말 끝없이 실수를 반복하는 것 같다 へ[ •́ ‸ •̀ ]ʋ1. 문제계속되는 폭우로 일부 지역이 물에 잠겼습니다. 물에 잠기지 않은 지역을 통해 학교를 가려고 합니다.집에..." }, { "title": "프로그래머스 고득점 Kit : N으로 표현", "url": "/posts/express_with_N/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, dynamic programming, c++", "date": "2020-08-07 00:00:00 +0900", "snippet": "이 문제는 조금 많이 고민했고, 아직까지도 왜 DP 문제인지 잘 모르겠는 문제이다. 어떻게 어떻게 풀기는 했으나 진짜 효율성이 너무 똥망…(●´⌓`●) 아직 다른 사람 코드는 보지 않은 상태인데, 다른 사람 코드를 보면서 많이 공부해야하는 문제이다. 이 문제를 Dynamic Programming으로 푼 사람이 얼마나 될까..? 내가 푼 방법은 Dynamic Programming 이라기 보다는 Brute Force에 가까운 알고리즘 풀이 방식인 것 같다 ʘ̥﹏ʘ1. 문제아래와 같이 5와 사칙연산만으로 12를 표현할 수 있습니다...." }, { "title": "프로그래머스 고득점 Kit : 정수 삼각형", "url": "/posts/integer_triangle/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, dynamic programming, c++", "date": "2020-08-06 00:00:00 +0900", "snippet": "이 문제를 푼지는 꽤 됐는데, 요즘 이래저래 정신이 없다보니까 문제를 풀기만하고 블로그에 정리를 못했다. 덕분에 정리할 문제가 밀린 상태..😅 문제를 풀고 그때그때 정리해야 기억에도 더 오래 남고 공부가 제대로 될텐데 요즘 조금씩 지친건지, 나태해진건지… 다시 한 번 마음을 다잡고 열심히 해야겠다는 생각이 든다. 이 문제는 동적 계획법 문제를 처음 푸는거라 조금 헤맸었는데, 계속해서 알고리즘을 생각해보면서 효율성 좋게 알고리즘을 탄탄히 세워갈 수 있었다. 문제를 풀고 나서는 꽤 뿌듯-(ღ˘⌣˘ღ)1. 문제위와 같은 삼각형의 꼭..." }, { "title": "프로그래머스 고득점 Kit : 입국심사", "url": "/posts/immigration/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, binary search, c++", "date": "2020-07-31 00:00:00 +0900", "snippet": "오늘 이 문제를 풀기 전에 약간 당황했다. 프로그래머스의 문제가 몇 개 사라졌는데 바로 어제 풀었던 ‘[이분탐색] 예산’ 문제가 사라져 있어서 알게되었다 😅 당황해서 다른 문제들도 몇 개 봤는데 다이나믹 프로그래밍 문제 몇 개 외에도 조금씩 사라졌더라… 잠깐의 오류인지, 아니면 프로그래머스 측에서 아예 문제를 없애버린 건지는 모르겠지만 아직 풀어보지 못한 문제가 하나씩 사라지니 마음이 조금 조급해졌다. 문제가 더 없어지기 전에 하루 빨리 프로그래머스 고득점 kit을 마무리하고싶다! 뽜야! (૭ ᐕ)૭1. 문제n명이 입국심사를 ..." }, { "title": "프로그래머스 고득점 Kit : 예산", "url": "/posts/buget/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, binary search, c++", "date": "2020-07-30 00:00:00 +0900", "snippet": "이 문제를 풀기 전 이분탐색이 무엇인지 대충은 기억나는데 어떤 자료 형태로 생성해야하는지를 몰라 검색해보았다. 덕분에 데이터 베이스, 알고리즘 수업을 들으면서 배웠던게 제대로 기억이 났다. 이분탐색 문제라서 이분탐색을 사용해서 풀어보려고 다른 알고리즘은 세워보지 않았는데, 문제를 풀고나서 다른 사람 풀이를 보니 이분탐색이 아닌 완전 다른 알고리즘으로 푼 코드가 있었다. 엄청 신박하기도하고 쉽게 생각할 수 없는 알고리즘이었는데 정말 대단하다는 생각이 들었다. 그래서 해당 알고리즘을 참고한 코드도 함께 게시글에 올리니, 다른 분들..." }, { "title": "프로그래머스 고득점 Kit : 순위", "url": "/posts/ranking/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, graph, c++", "date": "2020-07-29 00:00:00 +0900", "snippet": "이 문제는 문제 풀면서 조금 짜증났던 문제였다. 처음에 문제를 읽고 알고리즘을 세우는 데에는 10분 가량?이었는데 세운 알고리즘대로 코드를 작성했더니 정확도가 60점이어서 왜 안되는지 이유를 몰라 30분 가량 이도저도 못하고 있었다. 그러다가 스터디 시간에 친구에게 왜 내 코드가 안되는지 모르겠다며 알고리즘을 설명해 주다가 깨달았고…^^ 코드를 한 줄만 더해주었더니 해결 되었다. 뭔가 허무하기도 했는데 정확한 이유를 깨닫고 그에 맞게 정확한 알고리즘을 세울 수 있어서 좋았다. 하지만 효율성은 마음에 들지 않는다 ^_^1. 문제..." }, { "title": "프로그래머스 고득점 Kit : 가장 먼 노드", "url": "/posts/furthest_node/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, graph, c++", "date": "2020-07-29 00:00:00 +0900", "snippet": "첫 그래프 문제를 풀었다. 그래프는 첫 문제부터 level3이어서 이번에 처음 푸는데 DFS/BFS 문제를 먼저 접하고 풀어서 그런지 생각보다 괜찮았다. 그래프 문제이긴 했지만 BFS를 사용해서 풀었고, 나는 DFS/BFS 문제도 모두 DFS로 풀었어서 이번에 처음 BFS로 풀면서 확실히 어떤 문제에 DFS/BFS를 적용해야하는지 알게된 것 같다. 그리고 문제를 풀면서 또 느꼈던건 알고리즘 수업을 들으면서 배웠던 것이 다 기억이 안나서… 다시 공부해야겠다고 생각했다..ㅠㅠ 화이팅! (و ˃̵ᴗ˂̵)و1. 문제n개의 노드가 있는..." }, { "title": "프로그래머스 고득점 Kit : 여행 경로", "url": "/posts/travel_path/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, dfs-bfs, c++", "date": "2020-07-27 00:00:00 +0900", "snippet": "오랜만에 알고리즘 문제 풀이였다. 요즘 자격증 시험 때문에 공부하느라고 알고리즘 문제와 웹 공부를 제대로 하지 못했다. 고새 (일주일도 안되는 짧은 시간) 문제 조금 안풀었다고 머리가 굳은건지 열심히 풀려고 생각했는데 잘 안풀리더라…ㅠㅠ 결국 내 나름의 알고리즘을 세워 코드를 작성하였으나 테스트 케이스의 절반만 맞는 참사(…)를 경험하고, 이리저리 머리를 굴려보았으나 시간적인 한계와 더불어 머리가 더 이상 생각을 거부하는 것 같아 다른 사람의 코드를 참고하기로 결정했다 (｡•́-ก̀｡)1. 문제주어진 항공권을 모두 이용하여 여..." }, { "title": "프로그래머스 고득점 Kit : 저울", "url": "/posts/balance/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, greedy, c++", "date": "2020-07-18 00:00:00 +0900", "snippet": "이 문제는 결과적으로 문제를 푸는 데에는 그렇게 많은 시간이 걸리지 않았다. 그런데 처음 세웠던 알고리즘이 탐욕법을 사용하는 알고리즘도 아니었고, 정확도는 다 맞으나 효율성이 하나도 맞지 않아서 다른 알고리즘을 생각해야했다. 그래서 질문하기 게시판(?)에서 ‘정렬한 배열을 잘 이용해서 풀어보세요’라는 힌트를 얻었고, 이 말을 기반으로 머리를 굴리다가 효율성이 정말 좋은 알고리즘을 생각해냈다. 생각해내고 나서는 정말 뿌듯했는데, 힌트를 얻어 풀었다는 것이 조금 아쉬운 것 같다 (´._.`)1. 문제하나의 양팔 저울을 이용하여 물..." }, { "title": "프로그래머스 고득점 Kit : 섬 연결하기", "url": "/posts/connect_island/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, greedy, c++", "date": "2020-07-17 00:00:00 +0900", "snippet": "이 문제는 알고리즘은 어떻게 세워야할지 알겠는데 자료구조를 어떻게 만들어야 효율적으로 풀 수 있을지 엄청 고민했던 문제이다. 결국 그 방법을 찾지 못해서 알고리즘을 뒤엎어 해결했는데 효율성 측면에서 무척 마음에 들지 않는다..ㅠㅠ 기존의 알고리즘으로 해결할 수 있는 방법에 대해서 더 고민해보고 가능하다면 이에 대해서는 추 후에 추가적으로 작성하고싶다 (ง •̀_•́)ง1. 문제n개의 섬 사이에 다리를 건설하는 비용(costs)이 주어질 때,최소의 비용으로 모든 섬이 서로 통행 가능하도록 만들 때 필요한 최소 비용을 return..." }, { "title": "프로그래머스 고득점 Kit : 단어 변환", "url": "/posts/word_conversion/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, dfs-bfs, c++", "date": "2020-07-16 00:00:00 +0900", "snippet": "어제 저녁에 문제를 읽고 자기 전에 어떻게 풀어야할지 생각하면서 알고리즘을 대충 세우고 오늘 일어나서 풀어보았는데 생각했던 알고리즘이 맞아서 빨리 풀 수 있었다. 다만, 문제에서 기본적으로 제공해주는 기본 테스트 케이스를 틀려서 살펴보았더니 테스트 케이스가 잘못된 것을 발견했다. 혹시나 나와 같이 뭐지? 싶었던 분은 그냥 테스트 케이스가 잘못된 것이니 무시하고 코드를 제출하여 채점해보길 바란다(*´∇ ｀)ﾉ1. 문제두 개의 단어 begin, target과 단어의 집합 words가 있습니다.아래와 같은 규칙을 이용하여 begin..." }, { "title": "프로그래머스 고득점 Kit : 네트워크", "url": "/posts/network/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, dfs-bfs, c++", "date": "2020-07-15 00:00:00 +0900", "snippet": "이 문제는 풀릴듯 풀리지 않아서 시간을 조금 썼던 문제이다. 완성된 코드도 썩 마음에 들지는 않지만, 다음에 시간을 들여 좀 더 코드를 다듬어 봐야겠다. 프로그래머스 고득점 Kit 문제를 풀기 전에는 DFS/BFS 문제에 대해서 풀기도 전에 겁을 먹게 되었는데, 이렇게 level3 문제를 한 개씩 풀어가면서 확실히 풀 수 있다는 자신감은 생기는 것 같다. 이 마음이 자만심이 되기까지는 한 끝 차이이기 때문에 항상 조심하면서 더욱 성장해가는 내가 되었으면 좋겠다 !(•̀ᴗ•́)و ̑̑1. 문제네트워크란 컴퓨터 상호 간에 정보를 ..." }, { "title": "프로그래머스 고득점 Kit : 이중 우선순위 큐", "url": "/posts/double_priority_queue/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, heap, c++", "date": "2020-07-15 00:00:00 +0900", "snippet": "이전 문제에 비해 이 문제는 빨리 끝나서 좋았다. 그런데 처음에 우선순위 큐를 사용해서 풀려고 했다가 망해서 멀티셋을 사용했는데, 멀티셋에서 내가 잘 모르는 부분에 대해서 끙끙대다가 겨우 해결했다. 힘들긴 했지만 새롭게 알게된 것도 있었고, 앞으로 어떻게 사용해야겠다는 생각이 세워져서 많이 배울 수 있는 문제였다 ˘ڡ˘४1. 문제이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다. 명령어 수신 탑 (높이) I 숫자 큐에 주어진 숫자를 삽입합니다. ..." }, { "title": "프로그래머스 고득점 Kit : 디스크 컨트롤러", "url": "/posts/disk_controler/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, heap, c++", "date": "2020-07-15 00:00:00 +0900", "snippet": "이 문제 진짜 오랫동안 풀었다… 풀 수 있을 것 같은데 계속 안풀려서 스트레스도 엄청 받고ㅠㅠ 끝내 2시간만에 풀어냈지만.. 문제에서 효율성 테스트는 없었지만, 정확도 테스트 케이스 자체에서 효율성까지 함께 채점되는 듯한 느낌이었다. 처음에 세웠던 알고리즘은 시간초과해서 풀리지 않은 테스트 케이스들이 꽤 많았기 때문에.. 여튼, 끝내 풀어냈지만 더 공부가 많이 필요한 유형인 것 같다.1. 문제하드디스크는 한 번에 하나의 작업만 수행할 수 있습니다.디스크 컨트롤러를 구현하는 방법은 여러 가지가 있습니다.가장 일반적인 방법은 요청..." }, { "title": "프로그래머스 고득점 Kit : 단속 카메라", "url": "/posts/control_camera/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, greedy, c++", "date": "2020-07-15 00:00:00 +0900", "snippet": "이 문제는 엄청 빨리 풀었다. level3라고 생각이 안 들만큼! 문제를 읽고 어떻게 풀어야겠다하는 알고리즘이 바로 생각나서 생각난 알고리즘을 토대로 코드를 작성했는데 한 번에 해결되었다. 그래서 문제가 쉬웠던건지, 아니면 꾸준히 문제를 해결하면서 문제 해결 능력이 늘고 있는건지 잘은 모르겠지만, 어쨌든 문제가 빨리 풀려서 기분은 무척 좋았다(˵¯̴͒ꇴ¯̴͒˵)1. 문제고속도로를 이용하는 차량이 고속도로를 이용하면서 단속용 카메라를 한 번은 만나도록 카메라를 설치하려고 합니다.고속도로를 이동하는 차량의 경로 routes가 매개..." }, { "title": "프로그래머스 고득점 Kit : 베스트 앨범", "url": "/posts/best_album/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level3, algorithm, hash, c++", "date": "2020-07-13 00:00:00 +0900", "snippet": "드디어 첫 level3 문제이다. 문제 자체는 어렵지 않았는데, 좀 더 효율적으로 짜고싶다는 욕심이 생기니까 문제를 풀고나서 더 고민해보면서 시간을 많이 소모한 것 같다. 그런데도 결국 마음에 드는 코드는 나오지 않아서 좀 더 고민해야 할 듯… 알고리즘 공부가 아직 많이 부족한가보다ㅠㅠ 문제를 풀수록 자신감이 생겼는데 이번 부스트 캠프 코딩 테스트에 떨어지고 ʕ ཀ ⌂ ཀ ʔ 다시 자신감이 많이 낮아졌다. 아직 내가 많이 부족하다는 것을 인정하고 더 열심히 해야겠다는 생각이 든다. (사실 알고리즘 공부한지 얼마 되지도 않았는데..." }, { "title": "LeetCode Weekly Contest 196 : Minimum Possible Integer After at Most K Adjacent Swaps On Digits", "url": "/posts/smallest_number/", "categories": "Problem Solving, Leetcode, Weekly Contest", "tags": "leetcode, coding test, hard, algorithm, greedy, c++", "date": "2020-07-11 00:00:00 +0900", "snippet": "The difficulty of this problem was hard, but when I saw the problem, I thought I could solve. So, I challenged it with curiosity, but the result was a little insufficient. It passed 49 of the total 51 test cases. It’s a little lacking, but I hope you focus on the algorithm. And if you know where ..." }, { "title": "LeetCode Weekly Contest 196 : Last Moment Before All Ants Fall Out of a Plank", "url": "/posts/falling_ant_from_plank/", "categories": "Problem Solving, Leetcode, Weekly Contest", "tags": "leetcode, coding test, medium, algorithm, c++", "date": "2020-07-11 00:00:00 +0900", "snippet": "It was a little hard to understand the problem. I could see and understand the picture of the example, and it didn’t take very long to write the code. As you can see from solving the problem, there is a cute trick hidden in the problem. It’s a tiny trick that gives you the fear of being a complic..." }, { "title": "LeetCode Weekly Contest 196 : Can Make Arithmetic Progression From Sequence", "url": "/posts/equidistant_sequence/", "categories": "Problem Solving, Leetcode, Weekly Contest", "tags": "leetcode, coding test, easy, algorithm, sorting, c++", "date": "2020-07-11 00:00:00 +0900", "snippet": "Because it was the first time to solve a problem presented in English when studying algorithms, besides the competition, I was a little embarrassed. However the problem was short and the examples were out, so I wasn’t really tired. It was a little hard to figure out the problem by just looking fo..." }, { "title": "부스트캠프 2020 : 1차 온라인 코딩 테스트 후기", "url": "/posts/BoostCamp_2020_1st_condingtest/", "categories": "Problem Solving, Conding Test, Boost Camp", "tags": "coding test, review, boost camp, c++", "date": "2020-07-04 00:00:00 +0900", "snippet": "부스트캠프 1차 온라인 코딩 테스트가 끝이났다. 문제는 총 2문제, 시간은 120분. 사실 문제의 난이도가 그렇게 어렵지 않다고해서 크게 걱정하지는 않았는데 정말 의외의 문제가 나와서 처음 문제를 봤을때 당황했다. 이내 정신을 가다듬고 풀긴했지만… 이번 포스팅에서는 내가 어떻게 부스트 캠프를 지원하게됐고, 오늘 봤던 1차 온라인 코딩 테스트가 어땠는지에 대해서 이야기해보려한다.1. 지원 동기지원 계기는 간단했다.졸업이 다가오면서 취업에 관심이 생기고 교육이나 인턴 등 여러가지를 해봐야 할 때였기 때문에…2020 봄학기 개강 후..." }, { "title": "2020 카카오 인턴십 : 키패드 누르기", "url": "/posts/push_keypad/", "categories": "Problem Solving, Programmers, Kakao", "tags": "programmers, level1, algorithm, c++", "date": "2020-07-03 00:00:00 +0900", "snippet": "해당 문제의 유형은 모르겠다..ㅎㅎ 어떠한 자료구조를 사용한게 아니기도하고 그냥 문제를 보고 특정 유형을 생각하고 알고리즘을 세운게 아니라, ‘이렇게 이렇게하면 풀릴 것 같은데?’라는 생각으로 해결한 문제이기 때문이다. 처음에 이 문제를 풀 때는 풀이 접근을 잘못했었다. 미리 스마트폰 전화 키패드의 거리를 정의할 생각을 했는데 이것도 엄청 복잡하더라…ㅠㅠ 결국 설거지하면서 계속 생각하다 퍼뜩하고 아이디어가 떠올랐고 그대로 구현하니 풀렸다… =(:з」∠)_1. 문제스마트폰 전화 키패드의 각 칸에 다음과 같이 숫자들이 적혀 있습니..." }, { "title": "2020 카카오 인턴십 : 수식 최대화", "url": "/posts/formula_maximization/", "categories": "Problem Solving, Programmers, Kakao", "tags": "programmers, level2, algorithm, bruteforce, dfs-bfs, c++", "date": "2020-07-03 00:00:00 +0900", "snippet": "문제… 완전… 못 풀었어…ㅠㅠ 이번 문제는 정말 지저분하게 풀고 알고리즘이 깔끔하지 못하다는 생각이 들었다ㅠㅠ (세상에 3중 for문 이라니..) C++에서 문자열 split 관련 함수를 정식적으로 지원해주지 않는다는 것도 코드가 지저분해진데에 한 몫 하기 했지만, 그래도 제일 큰 문제는 내 알고리즘이 잘못된거겠지…?ㅠㅠ 문제를 봤을때 완전탐색 문제라는 생각은 들었는데 어떻게 풀어야할지는 잘 감이 오지 않았다.. 지저분한 코드로 해결은 했으나, 아직 다른 사람의 풀이도 보지 않은 상태이기 때문에 좀 더 깔끔한 알고리즘을 더 생..." }, { "title": "2019 KAKAO BLIND RECRUITMENT : 실패율", "url": "/posts/failure_rate/", "categories": "Problem Solving, Programmers, Kakao", "tags": "programmers, level1, algorithm, sorting, c++", "date": "2020-07-03 00:00:00 +0900", "snippet": "해당 문제는 level1인 만큼 쉬운편에 속했다. 다만 내가 생각하지 못한 부분이 있어서, 디버깅하는 데에 시간이 좀 걸렸다ㅠㅠ 카카오 문제를 풀면서 느끼는 건데, 카카오 코딩 테스트 문제의 질이 정말 좋은 것 같다. 그냥 우리가 흔히 아는 자료구조를 선택해서 바로 코드를 작성하는 문제들이 아니라 자료 구조를 어떤 것을 사용할지 선택하고 그 자료구조를 사용해서 어떻게 풀지 제대로 알고리즘을 세워 문제를 풀어야한다는 느낌이랄까…? 정확하게 설명하기는 어려운데 코딩 테스트 연습을 하는데에 정말 많은 도움이 된다. (•̀ᴗ•́)و ..." }, { "title": "2019 카카오 개발자 겨울 인턴십 : 크레인 인형뽑기 게임", "url": "/posts/crane-machine_game/", "categories": "Problem Solving, Programmers, Kakao", "tags": "programmers, level1, algorithm, stack-queue, c++", "date": "2020-07-03 00:00:00 +0900", "snippet": "이 문제는 해결하는데 시간이 오래 걸리지도 않았고, 디버깅 없이 바로 해결되었다. 난이도가 level인 만큼 쉬웠던 것 같다. 다만 문제의 지문이 조금 길어서 읽는데 시간 소모가 조금 있었다. 이 문제를 풀고, 다른 사람 풀이를 봤는데 굳이 나 처럼 스택 생성해 사용하지 않고도 그냥 매개변수로 주어지는 2차원 벡터 형태 그대로 사용해서 문제를 해결할 수 있다는 사실을 알고 내가 너무 알고리즘 “문제 풀이 = 자료구조 선택”에 집중해 있었다는 생각이 들었다. 문제를 풀 때, 편협한 생각에서 벗어나서 좀 더 자유롭게 사고할 수 있..." }, { "title": "2020 KAKAO BLIND RECRUITMENT : 문자열 압축", "url": "/posts/string_compression/", "categories": "Problem Solving, Programmers, Kakao", "tags": "programmers, level2, algorithm, bruteforce, c++", "date": "2020-07-02 00:00:00 +0900", "snippet": "오늘은 2020 부스트 캠프 1차 온라인 코딩 테스트를 대비해서 실제 시험 환경인 프로그래머스 사이트를 통해 코딩 테스트 준비를 했다. 작년 후기를 통해 문제의 난이도가 그렇게 높지 않다는 것을 듣고 2020, 2019 KAKAO BLIND RECRUITMENT 문제 중 level2 문제 4개를 뽑아 2시간 30분간 시간을 제한해서 문제를 풀었는데, 생각보다 어렵더라… 알고리즘 공부 더 열심히 해야지 o(╥﹏╥)o1. 문제데이터 처리 전문가가 되고 싶은 어피치는 문자열을 압축하는 방법에 대해 공부를 하고 있습니다.최근에 대량의..." }, { "title": "2020 KAKAO BLIND RECRUITMENT : 괄호 변환", "url": "/posts/parenthesis_transformation/", "categories": "Problem Solving, Programmers, Kakao", "tags": "programmers, level2, algorithm, c++", "date": "2020-07-02 00:00:00 +0900", "snippet": "해당 문제의 유형은 잘 모르겠다. 문제에 제시된 알고리즘 그대로 코드로 구현했더니 완성되어서… 재귀함수를 사용하긴 했으나 DFS/BFS 라기도 약간은 애매한 문제같다. 문제 유형을 떠나서는, 솔직히 왜 알고리즘 문제인지 잘 모르겠다는 생각이다. 문제 자체에 이미 알고리즘이 나와있어서 그대로 코드로만 변환하면 풀리는 문제이다. 그래서 나도 쉽게 풀었는데, 그만큼의 뿌듯함은 없었던 것 같다.1. 문제카카오에 신입 개발자로 입사한 콘은 선배 개발자로부터 개발역량 강화를 위해 다른 개발자가 작성한 소스 코드를 분석하여 문제점을 발견하..." }, { "title": "2019 KAKAO BLIND RECRUITMENT : 오픈 채팅방", "url": "/posts/openchatting/", "categories": "Problem Solving, Programmers, Kakao", "tags": "programmers, level2, algorithm, hash, c++", "date": "2020-07-02 00:00:00 +0900", "snippet": "이 문제는 처음에 문제를 자세히 읽지 않아서 문제를 풀고 디버깅을 했던 문제이다. 문제가 너무 길어서 읽지 않고 넘어간 부분이 좀 있었는데 제한조건은 꼭 제대로 읽어야겠다는 생각을 했다. 문제의 난이도는 그렇게 어렵지 않았지만, 자료구조를 어떻게 구성해서 문제를 풀지를 조금 고민했던 문제같다. 그리고 문제를 풀고나서 다른 사람 풀이를 봤는데 내 알고리즘과 비슷하지만, 코드를 좀 더 깔끔하게 푼 사람이 있어서 많이 배웠고, 변수의 이름을 좀 더 직관적으로 잘 지어야겠다는 생각을 했다 ; )1. 문제카카오톡 오픈채팅방에서는 친구가..." }, { "title": "프로그래머스 고득점 Kit : 프린터", "url": "/posts/printer/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, stack-queue, c++", "date": "2020-07-01 00:00:00 +0900", "snippet": "알고리즘 공부를 다시 시작했다. 프로그래머스 고득점 Kit에서 level2 문제를 딱 하나 못 풀었었는데, 그 문제가 바로 이 문제이다. 이번에 다시 풀면서 전에 세웠던 알고리즘을 뒤엎고 새로운 알고리즘으로 도전했는데 생각보다 금방 풀려서 맥이 풀렸다. 이전 알고리즘이 어디가 잘못됐는지는 여전히 모른채… 이전 알고리즘이 효율은 훨씬 좋은데, 해결되지 않은 이전 알고리즘 코드도 함께 올릴테니 아시는 분은 댓글 주시면 감사하겠습니다 ʕ ཀ ⌂ ཀ ʔ1. 문제일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다.그렇기 때문에 중..." }, { "title": "MDK-ARM IDE Keil μVision 설치하기 (STM32F411RE)", "url": "/posts/MDK-install_arm_ide_keil_uvision/", "categories": "Courses, Embeded", "tags": "embeded, study, install, mdk-arm, stm32f411re", "date": "2020-03-28 00:00:00 +0900", "snippet": "본 포스팅은 MDK-ARM IDE Keil μVision을 설치하는 방법을 이야기한다. 임베디드 과제를 하기 위해 세팅을 해야하는데 여기서부터 조금 헤메었던지라 혹시 나와 같은 사람이 있다면 도움이 되고자 포스팅을 작성한다. 처음에는 막막했는데 하나씩 찾아보면서 겨우겨우 설치했던터라 다른 사람들은 그렇지 않았으면 하는 마음에 자세히 적어보았다.1. MDK-ARM v5 설치하기1. MDK-ARM v5를 다운받기 위해 아래 홈페이지에 들어간다.https://www.keil.com/2. 오른쪽 모서리의 ‘Downloads’ 버튼을 ..." }, { "title": "맥(Mac) Bootcamp : Window 와 MacOS 간의 전환 방법", "url": "/posts/mac_window_change/", "categories": "Etc, Tips", "tags": "boot camp, mac, window", "date": "2020-03-25 00:00:00 +0900", "snippet": "본 포스팅에서는 Mac에서 BootCamp를 사용해서 Window 운영체제를 설치하고, 다시 MacOS로 돌아가는 방법 혹은 MacOS에서 다시 Window 운영체제로 돌아가는 방법을 모르는 사람들을 위한 포스팅이다. 이 방법은 무척 간단하고 쉽기 때문에 한 번 익히기만하면 언제든 계속해서 사용할 수 있을 것이다.1. Windows와 macOS 간에 전환하는 방법1. Mac을 재시동한다.2. Mac이 켜지기 전 (화면이 꺼졌을 때), 키보드의 option(또는 alt) ⌥ 키를 길게 누른다.3. 아래와 같이 시동 관리자 창이 ..." }, { "title": "맥(Mac) BootCamp: 윈도우10 설치", "url": "/posts/mac_bootcamp_window10/", "categories": "Etc, Tips", "tags": "boot camp, mac, window, window10, install", "date": "2020-03-25 00:00:00 +0900", "snippet": "본 포스팅에서는 Mac의 BootCamp를 사용해서 윈도우10 운영체제를 설치하는 방법에 대해서 설명한다. 여러 블로그를 검색하다가 전부 잘 이해가 되지 않아 열심히 검색하고 또 찾아보고 포스팅한다. 나처럼 방법을 잘 몰라 헤메었던 사람들에게 많은 도움이 되길 바라며…ㅠㅠ1. Window10 ISO 파일 다운ISO 파일을 다운 받지 않고 바로 이 포스팅으로 온 사람들을 위해,아래 링크에 들어가 나온 순서대로 따라하면 ISO 파일을 다운 받을 수 있을 것이다.http://localhost:4000/posts/window10_do..." }, { "title": "학생 윈도우10 정품 Edu 에디션 무료 다운", "url": "/posts/window10_download/", "categories": "Etc, Tips", "tags": "window10, install, mac, window", "date": "2020-03-24 00:00:00 +0900", "snippet": "본 포스팅에서는 학생들이 윈도우10 정품 Edu 에디션 (Windows10 Edu) 을 무료로 다운 받는 방법을 이야기한다. 하지만 알아둬야 할 것은, 마이크로소프트와 계약이 되어있는 학교만을 대상으로하며, 학생이 아니거나 마이크로소프트와 계약이 되어있지 않은 학교 학생들도 정품 인증은 되지 않지만 윈도우10을 무료로 다운 받을 수 있는 방법을 소개한다.1. 마이크로소프트와 계약이 되어있는 학교인지 확인제목에서도 이야기했다싶이 학생들은 Window10, 정확히는 Window10 edu 에디션을 무료로 다운 받을 수 있다.단, ..." }, { "title": "프로그래머스 고득점 Kit : 구명보트", "url": "/posts/lifeboat/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, greedy, c++", "date": "2020-03-22 00:00:00 +0900", "snippet": "본 문제는 굉장히 빨리 풀었지만 효율성 때문에 엄청 헤멨다. 효율성 때문에 코드를 엎고, 질문하기를 찾아보면서 어떻게 해야 더 좋은 코드를 짤 수 있는지 굉장히 고민을 많이 했던 문제였다. 정확도는 다 맞았는데 효율성 때문에 통과 못하니 너무 답답하고 스트레스를 받았는데, 알고리즘을 공부하는 이유가 결국 효율성 좋게 문제를 해결하기 위함이므로 좋은 코드를 짤 수 있도록 계속해서 고민하고 노력해야겠다고 생각했다.1. 문제무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다.구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 ..." }, { "title": "프로그래머스 고득점 Kit : 큰 수 만들기", "url": "/posts/creating_large_number/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, greedy, c++", "date": "2020-03-22 00:00:00 +0900", "snippet": "본 문제는 생각보다 빨리 푼 문제였다. 예외 케이스를 질문하기에서 찾아볼 수 있어서 그런지 모르겠지만 처음에 바로 떠올랐던 알고리즘대로 쉽게 풀 수 있었고, 효율성도 나름 괜찮게 풀어서 기분이 좋았다. 근데 string에서 erase() 함수를 어떻게 쓰는지 까먹어서 다시 찾아보았다ㅋㅋ 까먹지 않으려고 항상 블로그에 정리하고 하는건데… 앞으로 더 정신 차리고 열심히 정리해야지!1. 문제어떤 숫자에서 k개의 수를 제거했을 때 얻을 수 있는 가장 큰 숫자를 구하려 합니다.예를 들어, 숫자 1924에서 수 두 개를 제거하면 [19,..." }, { "title": "프로그래머스 고득점 Kit : 조이스틱", "url": "/posts/joystick/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, greedy, c++", "date": "2020-03-21 00:00:00 +0900", "snippet": "개인적으로 본 문제는 정확하지 못한 문제라고 생각한다. 나 또한 많은 테스트 케이스가 실패해 이것저것 시도해 본 결과 문제의 최적해가 아니더라도 통과되었기 때문이다. 확인을 해보니 본 문제의 질문하기 게시판에서도 많은 사람들이 문제가 이상하다는 말이 계속해서 나왔다. 그래서 개인적으로는 현재 프로그래머스 고득점Kit 문제를 도전하고 있는 사람들 중 본 문제가 너무 풀리지 않아 스트레스 받는다 하시는 분들은 사실 이 문제를 건너뛰어도 크게 문제가 있지 않을 것 같다고 생각한다.1. 문제조이스틱으로 알파벳 이름을 완성하세요. 맨 ..." }, { "title": "프로그래머스 고득점 Kit : 체육복", "url": "/posts/gym_suit/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level1, algorithm, greedy, c++", "date": "2020-03-20 00:00:00 +0900", "snippet": "본 문제는 level1의 문제라서 사실 조금 안심하고 풀었던 문제이다. 오랜만에 level1 문제를 풀어서 그런지 반가웠고, 문제를 읽고 바로 어떻게 풀어야할지 머리속으로 알고리즘이 세워져서 기분이 좋았다. 물론 Greedy Algorithm 을 알고리즘 수업에서 배운지 조금 되어서 어떤 것이었는지 잠깐 헤맸지만, 부분적인 최적해가 전체적인 최적해가 된다는 글을 보고 기억이 퍼뜩 떠올랐다.1. 문제점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다...." }, { "title": "프로그래머스 고득점 Kit : 주식가격", "url": "/posts/stock_price/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, stack-queue, c++", "date": "2020-03-17 00:00:00 +0900", "snippet": "본 문제는 처음에 문제를 잘 이해하지 못해서 함께 문제를 푸는 언니에게 물어보았다. 처음에는 문제를 잘못 이해했다가 ‘이거 조금 이상한 것 같은데?’ 하는 생각이 들었다가 언니의 설명을 듣고 이해가 되었고, 문제를 이해한 뒤에는 문제를 푸는 데에는 그렇게 오래 걸리지 않았다. 루프를 두 번 돌기 때문에 효율성이 좋다고 말할 수는 없지만 다른 사람들도 비슷하게 푼 것 같아 완전 비효율적으로 문제를 푼건 아니라는 생각이 들었다.1. 문제초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때,가격이 떨어지지 않은..." }, { "title": "프로그래머스 고득점 Kit : 더 맵게", "url": "/posts/spicier/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, heap, c++", "date": "2020-03-17 00:00:00 +0900", "snippet": "본 문제는 level2인 것 치고는 쉬운 편이었지만 문제를 꼼꼼히 읽어야했던 문제였다. 나는 함께 문제를 푸는 언니가 문제를 자세히 봐야한다고 말해주었기 때문에 금방 찾을 수 있었지만, 만약 몰랐다면 문제를 제대로 안읽고 왜 안되냐며 헛수고를 하고 있었을거라는 생각이 들었다. 그리고 이번 문제에서는 ‘힙’ 이라는 새로운 자료구조(?)를 배웠는데 처음이라서 쓰는 방법에 대해 조금 헤맸던 것 같다.1. 문제매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다.모든 음식의 스코빌 지수를 K 이상으로 만..." }, { "title": "프로그래머스 고득점 Kit : 라면공장", "url": "/posts/noodle_factory/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, heap, c++", "date": "2020-03-17 00:00:00 +0900", "snippet": "본 문제는 풀면서 난이도가 조금 있는 것 같은 문제라고 생각했는데, 생각보다 빨리 그리고 생각보다 잘 푼 것 같아서 기분이 좋았다. 근데 처음 풀고 문제를 제출 했을 때 테스트 케이스 몇 개가 틀렸었는데, 경계값들을 조금씩 바꾸면서 제출하니 통과되었다. 풀 때는 맞추기만하면 되니까 넘겼었는데 지금 블로그를 정리하려고 보니 제한조건이 조금 잘못 나와있는 듯해서 그 부분도 같이 언급하려한다.1. 문제라면 공장에서는 하루에 밀가루를 1톤씩 사용합니다.원래 밀가루를 공급받던 공장의 고장으로 앞으로 k일 이후에야 밀가루를 공급받을 수 ..." }, { "title": "프로그래머스 고득점 Kit : 쇠막대기", "url": "/posts/iron_bar/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, stack-queue, c++, javascript", "date": "2020-03-17 00:00:00 +0900", "snippet": "스택/큐 문제는 문제를 풀수록 잘 모르겠는 것이, ‘왜 이 문제가 스택/큐 문제이지?’ 하는 의문이 든다. 스택이나 큐 자료구조를 사용하지 않아도 풀 수 있고, 또 실제로 그렇게 풀고있으니까 말이다. 물론 이전에도 말했듯이 알고리즘 문제를 풀 때는 자료구조를 어떤 것을 사용해야한다는 제한이나 조건이 없기 때문에 자유롭게 문제를 풀 수 있지만 말이다. 본 문제는 푸는데 시간이 엄청 짧게 걸렸고 그래서 기분이 좋았던 문제였다 :)1. 문제여러 개의 쇠막대기를 레이저로 절단하려고 합니다.효율적인 작업을 위해서 쇠막대기를 아래에서 위..." }, { "title": "프로그래머스 고득점 Kit : 기능개발", "url": "/posts/feature_development/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, stack-queue, c++", "date": "2020-03-17 00:00:00 +0900", "snippet": "이 문제도 ‘[스택/큐] 탑’ 문제랑 비슷하게 level2 인것 치고는 쉬운 문제라는 생각이 들었다. 딱 문제를 읽자마자 ‘어, 이거 금방 풀 수 있을 것 같은데?’ 하는 생각이 떠올랐고, 예상대로 문제는 무척 빨리 풀렸다. 비록 while문을 두개로 중첩해서 사용해서 효율성은 떨어지지만… 그리고 풀고나서 다른 사람 풀이를 보다가 내가 전에 이 문제와 비슷한 문제를 더 효율성 좋게 푼적이 있었던 것이 생각나서 내 자신이 정말 바보라고 생각했었다…ㅠㅠ1. 문제프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다.각 기능은 진도가..." }, { "title": "프로그래머스 고득점 Kit : 다리를 지나는 트럭", "url": "/posts/bridge_truck/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, stack-queue, c++", "date": "2020-03-17 00:00:00 +0900", "snippet": "오랜만에 프로그래머스 고득점 Kit 문제를 풀어 올린다. 그동안 자바 캠프에 대해서 정리하느라고 알고리즘 문제 푸는 것을 잠시 쉬었더니 금세 감을 잃었는지 이 문제를 푸는데에는 꽤 오래 걸렸다. 문제 자체를 이해하는 데에도 시간을 많이 썼던 탓도 있긴하지만, 그래도 문제를 풀어놓고보니 나름 잘 풀었다는 생각이 들어서 뿌듯했던 문제였다 :)1. 문제트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다.모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다.트럭은 1초에 1만큼 움직이며, 다리 ..." }, { "title": "Java GUI 프로젝트 도전기 : 계산기, 그림판, 데이터베이스, 이미지 프로세싱, 육목, 네트워크", "url": "/posts/start_java_camp/", "categories": "Project, Java Camp", "tags": "project, java camp, java, gui, graphics, database, image processing, network, socket programming", "date": "2020-03-15 00:00:00 +0900", "snippet": "본 포스팅의 시작에 앞서 내가 이 포스팅을 올리게된 계기를 설명하려한다. 나는 학교에서 Java를 배우고 방학 때 교수님의 지도 아래 3주동안 6개의 프로젝트를 진행하였다. GUI에 대한 지식이 없었던 상태에서 이 프로젝트는 나에게 정말 많은 도움이 되었고, 이 프로젝트 후에는 어떤 것이든 할 수 있을 것 같은 자신감이 생겼다. 그래서 나는 이 경험을 Java를 배우고 얼마되지 않은 친구들이 GUI를 공부해보고 싶다거나, Java를 좀 더 다양하게 활용해 보고 싶은 마음이 있는 친구들에게 나누고, 그 때했던 프로젝트들을 하나씩..." }, { "title": "Java GUI 프로젝트 도전기 : 육목 네트워크 적용하기", "url": "/posts/network_connect6/", "categories": "Project, Java Camp", "tags": "project, java camp, java, gui, socket programming", "date": "2020-03-14 00:00:00 +0900", "snippet": "⏰ 기간 4일 ⏰드디어 마지막이다. 길었다면 길고 짧았다면 짧은 6개의 프로젝트가 거의 막을 내리고있다. 여기까지 포기하지않고 온 사람들에게는 정말 대단하고 수고했다고 박수쳐주고싶다. 그럼 마지막까지 잘 마무리 짓길 바라면서, 이번 프로젝트는 이전 라운드에서 구현했던 육목에 네트워크를 적용시켜 실제로 두 플레이어가 육목 게임이 가능하도록 하는 것이다. 프로젝트를 진행하지 않는 사람들에게는 나의 코드와 설명이 유용한 정보가 되길 바란다 :)1. 기능 서로 다른 컴퓨터에서 육목 게임이 가능하도록 네트워크를 연결 이외에는 자유롭..." }, { "title": "Java GUI 프로젝트 도전기 : 이미지 프로세싱 포토샵 만들기", "url": "/posts/image_processing/", "categories": "Project, Java Camp", "tags": "project, java camp, java, gui, image processing", "date": "2020-03-14 00:00:00 +0900", "snippet": "⏰ 기간 4일 ⏰벌써 프로젝트의 반이 끝났다는 사실이 놀랍다. 내 생각에는 항상 이맘때 즈음이 가장 힘든 시기인 것 같다. 중간쯤 왔을 때 지금까지 해왔던 과정을 한 번 더 해야한다는 마음과 그냥 포기하고 싶은 마음의 갈등 속에 있을 때, 더욱 힘내서 다음 단계로 나아갔으면 좋겠다. 네번째 프로젝트는 이미지 프로세싱이다. 이미지를 가지고 조작하는 것이다. 프로젝트를 진행하지 않는 사람들에게는 나의 코드와 설명이 유용한 정보가 되길 바란다 :)1. 기능 이미지 파일 읽어오기, 이미지 흑백 반전, 이미지 엣지추출, 대비, 밝기 ..." }, { "title": "Java GUI 프로젝트 도전기 : 육목 만들기", "url": "/posts/connect6/", "categories": "Project, Java Camp", "tags": "project, java camp, java, gui", "date": "2020-03-14 00:00:00 +0900", "snippet": "⏰ 기간 2일 ⏰벌써 2주일이 넘었다. 이제 프로젝트도 2개만 남겨두고있는 상태인데, 사실상 프로젝트는 한 개만 남은거라고 생각해도 무방할 것 같다. 이번 프로젝트인 육목은 다음 프로젝트인 네트워크 육목을 위한 준비과정이라고 할 수 있기 때문이다. 그럼 다음 프로젝트를 위해서 기반을 잘 마련해보자. 프로젝트를 진행하지 않는 사람들에게는 나의 코드와 설명이 유용한 정보가 되길 바란다 :)1. 기능 두 명의 플레이어가 육목 게임이 가능하도록 구현 이외에는 자유롭게 자신이 선보이고 싶은 기능, 있으면 좋겠다 싶은 기능 추가2. ..." }, { "title": "Java GUI 프로젝트 도전기 : MySQL 설치 및 Eclipse Java - MySQL 연동", "url": "/posts/java_mysql/", "categories": "Project, Java Camp", "tags": "project, java camp, java, gui, database, mysql", "date": "2020-03-14 00:00:00 +0900", "snippet": "프로젝트의 번외편으로 자바로 MySQL을 연동시키는 방법에 대해 이야기 하려한다. 나도 프로젝트를 진행할 당시에 데이터베이스에 대한 개념이 없어 힘들었던 기억이 있기 때문에… 본 포스팅은 eclipse에서 자바와 MySQL을 연동시킬 수 있는 간단한 방법에 대해 이야기한다.1. MySQL connector/J 다운로드https://dev.mysql.com/downloads/connector/j/ 위 사이트에서 MySQL connector/J를 다운받는다. Operating System은 Platform Ind..." }, { "title": "Java GUI 프로젝트 도전기 : 데이터베이스 연결", "url": "/posts/database/", "categories": "Project, Java Camp", "tags": "project, java camp, java, gui, database, mysql", "date": "2020-03-14 00:00:00 +0900", "snippet": "⏰ 기간 3일 ⏰벌써 일주일이 넘었다. Round2 그림판 만들기 를 하면서 Java GUI를 능숙하게 다룰 수 있다는 자신감을 가졌길 바라며, 다음 단계로 넘어가 보자! 세번째 프로젝트는 데이터베이스이다. 데이터베이스에 대해서 알고있는 사람도 있을 것이고 모르는 사람도 있을텐데 다행이도(?) 자바와 MySQL을 Eclipse를 사용해 연결시키는 과정은 내가 정리할 계획이다. 프로젝트를 진행하지 않는 사람들에게는 나의 코드와 설명이 유용한 정보가 되길 바란다 :)1. 기능 신규 가입 (ID 중복 확인, PW 확인) 로그인 ..." }, { "title": "Java GUI 프로젝트 도전기 : 그림판 만들기", "url": "/posts/draw_board/", "categories": "Project, Java Camp", "tags": "project, java camp, java, gui, graphics", "date": "2020-03-13 00:00:00 +0900", "snippet": "⏰ 기간 4일 ⏰첫 실전을 마무리했다. Round1 계산기 만들기 에서 Java GUI에 대해서 조금 감을 잡았길 바라며, 다음 단계로 넘어가 보자! 두번째 프로젝트는 그림판이다. Round1에서는 GUI에 대해 익히는 것이었다면 이번 라운드에서는 java GUI를 좀 더 깊게 공부하게 되지 않을까 생각한다. 마찬가지로 프로젝트를 진행하지 않는 사람들에게는 나의 코드가 유용한 정보가 되길 바란다 :)1. 기능 그리기: 선, 사각형, 원, Polyline, Sketch(Pen), Spray, Pattern 中 최소 4가지 이상..." }, { "title": "Java GUI 프로젝트 도전기 : 계산기 만들기", "url": "/posts/calculator/", "categories": "Project, Java Camp", "tags": "project, java camp, java, gui", "date": "2020-03-13 00:00:00 +0900", "snippet": "⏰ 기간 3일 ⏰이제 본 프로젝트의 진정한 실전 시작이다. 자바의 정석 책 읽기 에서 지쳐버렸을텐데 이제부터 실전이니 힘내서 한 단계 더 나아가길! 첫번째 프로젝트는 계산기 만들기다. GUI를 접해보지 않은 사람이라는 가정하에, 이번 프로젝트에서는 Java GUI 사용 방법에 대해서 공부하고, 익숙해지면 시간이 될 것 같다. 그리고 프로젝트를 진행하지 않는 사람들에게는 나의 코드가 유용한 정보가 되길 바란다 :)1. 기능 계산: 사칙 연산(덧셈, 뺄셈, 곱셈, 나눗셈)의 결과(=) 버튼: 0 부터 9까지의 숫자, 초기화, ..." }, { "title": "Java GUI 프로젝트 도전기 : 자바의 정석 책 읽기", "url": "/posts/reading_java_book/", "categories": "Project, Java Camp", "tags": "project, java camp, java, gui", "date": "2020-03-12 00:00:00 +0900", "snippet": "⏰ 기간 1일 ⏰본 프로젝트의 첫 단계는 ‘자바의 정석’ 책 읽기 이다. 자바의 정석 책이 아니어도 되고, 자신이 좋아하는 자바 책 혹은 자신이 가지고 있는 자바 책이어도 되지만 나는 교수님의 지도하에 ‘자바의 정석’ 으로 선택했다. 그리고 지금 다른 책과 비교해보아도 개인적으로 ‘자바의 정석’ 책이 다른 책에 비해 내용적인 면에 있어서 좋은 것 같다.1. 책 준비자바의 정석 (27,000원)구매하러가기 (교보문고)꼭 자바의 정석이 아니어도 괜찮다. 마음에 드는 책으로 준비!2. 책 읽기본 포스팅을 쓴 목적이기도 한데, 책은 ..." }, { "title": "프로그래머스 고득점 Kit : 탑", "url": "/posts/top/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, stack-queue, c++", "date": "2020-03-11 00:00:00 +0900", "snippet": "본 문제는 level2 라고 하기엔 조금 놀랄만큼 쉬웠던 문제이다. 해결한 사람 수만 봐도 level1의 문제와 비슷했기 때문에 쉬울거라고 예상은 했었지만 정말 쉬운 문제였다. 다만, 본 문제가 왜 Stack/Queue 문제인지는 아직 잘 이해가가지 않는다. stack을 시용해서 풀 수는 있으나 여러가지 다른 방법으로도 해결 가능하기 때문에… 물론 모든 문제가 제시된 방법으로만 해결되는 것은 아니기 때문에 어떤 방법으로든 효율성 좋게 해결만 한다면 괜찮지 않을까?1. 문제수평 직선에 탑 N대를 세웠습니다. 모든 탑의 꼭대기에는..." }, { "title": "프로그래머스 고득점 Kit : 타겟 넘버", "url": "/posts/target_number/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, dfs-bfs, c++", "date": "2020-03-11 00:00:00 +0900", "snippet": "본 문제는 처음에 접근을 어떻게 해야할지 잘 모르겠어서 언니와 의논을 한 뒤에 풀기 시작했다. 확실히 한 번 의논을 한 뒤에 문제에 접근하면 훨씬 쉽게 접근 할 수 있는 것 같다. 완전히 혼자의 힘으로 풀지는 못했지만, 문제를 푸는 방향을 옳게 갔다는 데에는 확실히 좋은 방법이라고 생각이 든다. 그래도 다음부터는 최대한 혼자의 힘으로 풀도록 노력해야지 (๑و•̀Δ•́)و1. 문제n개의 음이 아닌 정수가 있습니다.이 수를 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다.예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려..." }, { "title": "프로그래머스 고득점 Kit : 숫자 야구", "url": "/posts/numerical_baseball/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, bruteforce, c++", "date": "2020-03-11 00:00:00 +0900", "snippet": "본 문제는 문제를 읽자마자 바로 알고리즘이 떠올랐다. 하지만 정작 문제는 잘 해결되지 않았는데, 내가 문제를 자세하게 읽지 않아서 문제를 잘못 이해하고 있었다. 보통의 숫자야구를 생각해서 당연히 중복된 숫자가 가능하고, 0도 포함되어 있을거라 생각했으나 그게 아니었던 것이 복병이었던 것 같다. 역시 문제 속에 답이 있다고… •́︿•̀ 앞으로 문제를 꼼꼼히 읽는 습관을 들여야겠다.1. 문제숫자 야구 게임이란 2명이 서로가 생각한 숫자를 맞추는 게임입니다. 게임해보기각자 서로 다른 1~9까지 3자리 임의의 숫자를 정한 뒤 서로에게..." }, { "title": "프로그래머스 고득점 Kit : 카펫", "url": "/posts/carpet/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, bruteforce, c++", "date": "2020-03-11 00:00:00 +0900", "snippet": "본 문제는 정말 마음에 안들게 푼 문제이다. 해결 후에 분명 더 좋은 방법이 있을거라고 생각은 드는데 쉽게 생각이 떠오르질 않아서 기분이 좋지 않았다. 그리고 다른 사람의 풀이를 보는데 ‘왜 이렇게 생각하지 못했지’, ‘이번 문제는 정말 못 풀었다’하는 생각이 들었다. 그래서 풀고나서 다른 사람의 코드를 참고해 다시 한 번 더 풀어서, 처음에 생각했던 알고리즘과 다른 사람의 코드를 참고해서 다시 내 나름대로 푼 알고리즘 두 가지가 있다.1. 문제Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 빨간색으로 칠해져 있고 테두..." }, { "title": "프로그래머스 고득점 Kit : 소수 찾기", "url": "/posts/find_prime_number/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, bruteforce, c++", "date": "2020-03-10 00:00:00 +0900", "snippet": "본 문제는 고민을 많이 했던 문제였다. 완전탐색이기 때문에 효율성을 중요하게 생각하지 않는 알고리즘을 생각해보려고해도 어려웠었는데, 포기하고 이 다음 문제를 풀다가 키 포인트를 잡을 수 있었다. 효율성이 그렇게 좋지는 않지만, 나름 수학 공부도 되고 풀면서 재밌었던 것 같다.1. 문제한자리 숫자가 적힌 종이 조각이 흩어져있습니다.흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다.각 종이 조각에 적힌 숫자가 적힌 문자열 numbers가 주어졌을 때, 종이 조각으로 만들 수 있는 소수가 몇 개인지 return..." }, { "title": "프로그래머스 고득점 Kit : H-Index", "url": "/posts/h_index/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, sorting, c++", "date": "2020-03-06 00:00:00 +0900", "snippet": "본 문제는 문제를 이해하는 데에 무척 오려 걸렸다. 문제를 이해한 후에도 나름의 알고리즘을 세우고 코드를 짰지만 도무지 어느 곳이 잘못된지를 몰라 애를 많이 먹어서 알고리즘을 한 번 뒤엎었던 문제이기도 하다. 처음에 생각했던 알고리즘과 다른 알고리즘으로 문제를 해결한 후에 다른 사람의 코드를 보며 처음 세웠던 알고리즘을 정리해 다시 짜면서 해결코드가 두 가지가 되었는데, 코드를 보면서 알고리즘이 어떻게 다른지 생각해보는 것도 좋은 공부가 될 것 같다 :)1. 문제H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다.어..." }, { "title": "프로그래머스 고득점 Kit : 가장 큰 수", "url": "/posts/largest_number/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, sorting, c++, javascript", "date": "2020-03-05 00:00:00 +0900", "snippet": "본 문제는 푸는데 시간이 정말 오래걸렸던 문제이다. 하지만 알고리즘 문제 풀기의 정석대로 단계를 거쳤던 것 같아 문제를 풀고나서는 뿌듯하고 내 자신이 자랑스러웠다. 처음에 잘못된 방향으로 고민하다가 점점 정답에 가깝게 생각했다는 것이 정말 기분좋다 :)1. 문제0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.0 또..." }, { "title": "프로그래머스 고득점 Kit : 위장", "url": "/posts/camouflage/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, hash, c++, javascript", "date": "2020-03-05 00:00:00 +0900", "snippet": "본 문제는 이전에 남자친구와 함께 고민해본 적이 있는 문제여서 무척 빠르게 풀었다. 알고리즘 문제라기 보다는 수학 문제에 가깝고 (이 또한 알고리즘 이긴 하지만…) 문제를 풀면서 고등학교 수학에서 배웠던 경우의 수가 생각나는 문제이다.1. 문제스파이들은 매일 다른 옷을 조합하여 입어 자신을 위장합니다.예를 들어 스파이가 가진 옷이 아래와 같고 오늘 스파이가 동그란 안경, 긴 코트, 파란색 티셔츠를 입었다면 다음날은 청바지를 추가로 입거나 동그란 안경 대신 검정 선글라스를 착용하거나 해야 합니다. 종류 ..." }, { "title": "프로그래머스 고득점 Kit : 전화번호 목록", "url": "/posts/telephone_directory/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level2, algorithm, hash, c++", "date": "2020-03-04 00:00:00 +0900", "snippet": "본 문제는 풀기 전에 알고리즘을 생각하면서 ‘이렇게하면 될까?’하고 반신반의하며 푼 문제이다. set의 upper_bound에 대해서 제대로 이해하지 못하고 있는 줄 알았는데 막상 이걸 이용해서 문제를 해결하고나니 제대로 이해하고 있었다는 생각이 들었다 :)1. 문제전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다. 구조대 : 119 박준영 : 97 674 223 지영석 : 11 9552 4421전..." }, { "title": "프로그래머스 고득점 Kit : 모의고사", "url": "/posts/mock_test/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level1, algorithm, bruteforce, c++", "date": "2020-03-04 00:00:00 +0900", "snippet": "본 문제를 풀면서 가장 뿌듯했던 것은 각 수포자가 찍는 방식을 미리 array로 만들어둔것이다. 다른 사람이 생각할 때 ‘그게 왜?’라고 생각할 수 있지만, 평소에 내가 생각하고 있던 것이 아니라 문제를 풀면서 퍼뜩하고 생각나서 더 그랬던 것 같다.1. 문제수포자는 수학을 포기한 사람의 준말입니다.수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다.수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다. 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, … 2번 수포자가 찍는 방식..." }, { "title": "프로그래머스 고득점 Kit : 완주하지 못한 선수", "url": "/posts/uncompleted-player/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level1, algorithm, hash, c++, javascript", "date": "2020-03-03 00:00:00 +0900", "snippet": "본 문제는 한 번 풀어본 적이 있어서 문제를 푸는 데에 많은 시간이 걸리지는 않았다. 하지만 C++을 사용해서 문제를 해결하는 것이 처음이었고, 처음에 hash_map으로 잘못 검색하여 실행시키는데 오류 범벅인 코드 덕에 애를 조금 먹었다. 그리고 hash에 대한 개념이 완벽하지는 않지만 조금 잡혀가고 있는 것 같다.1. 문제수많은 마라톤 선수들이 마라톤에 참여하였습니다.단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담..." }, { "title": "프로그래머스 고득점 Kit : K번째 수", "url": "/posts/kth_number/", "categories": "Problem Solving, Programmers, Highscore Kit", "tags": "programmers, highscore kit, level1, algorithm, sorting, c++, javascript", "date": "2020-03-03 00:00:00 +0900", "snippet": "본 문제를 푸는 데에 큰 어려움은 없었지만 vector를 사용하는 데에 있어서 조금 공부가 필요했다. 아직까지 문제가 많이 어렵지는 않아서 난이도에 있어서나 문제를 푸는 시간에 있어서 그렇게 오래 걸리지는 않지만 C++을 잘 몰라 찾고 공부하는 데에 시간 소요가 있는 것 같다.1. 문제배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면 array의 2번째부터 5번째까지 ..." }, { "title": "Recursive &amp; Dynamic Programming : 조합 (Combination)", "url": "/posts/recursive_dp/", "categories": "Courses, Algorithm, Recursive&DP", "tags": "algorithm, study, recursive, dp, c", "date": "2019-04-08 00:00:00 +0900", "snippet": "알고리즘을 공부하다보면 Dynamic Programming Algorithm이라는 것에 대해 배운다.한국어로 하면 ‘동적 프로그래밍’인데, 실제로 사용하는 것을 보면 전혀 다이나믹 하지 않다.이번 포스팅에서는 Dynamic Programming이 어떤 알고리즘 기법인지 보고,이 알고리즘이 Recursive 알고리즘과 비교해서 얼마나 효율적인지를 이야기 해보자.1. Recursive AlgorithmDynamic Programming에 대한 이야기를 하기 전에, 먼저 Recursice Algorithm을 알아보자.1) Recur..." }, { "title": "그래프 (Graph)", "url": "/posts/Graph/", "categories": "Courses, Algorithm, Graph", "tags": "algorithm, data structure, study, graph", "date": "2019-03-30 00:00:00 +0900", "snippet": "이번 포스팅에서는 그래프라는 새로운 주제로 알고리즘과 자료 구조 분야의 영역을 다룰 것이다. 그래프가 무엇이고 그래프에서 사용하는 주요 용어와 예시를 통해 이야기 해보자. 또한 사진들을 보면서 그래프의 종류에는 어떤 것들이 있는지 배워보자.1. Graph1) Graph 란?그래프란 무엇인가?컴퓨터 공학을 전공하는 사람들은 꼭 한 번 들어봤을 법한 ‘Graph(그래프)’.대학교 과정에서 데이터 구조, 알고리즘 등 주요 과목들에 자주 등장하는 용어이다. 그래프(Graph)노드(N, Node)와 그 노드를 연결하는 간선(E, Ed..." }, { "title": "데이터 흐름 이상 분석 (Dataflow Anomaly Analysis)", "url": "/posts/dataflow_anomaly_analysis/", "categories": "Project, Capstone, PMD", "tags": "project, capstone, java, pmd, dataflow anomaly analysis, bug", "date": "2019-03-20 00:00:00 +0900", "snippet": "전 포스팅 중 PMD에 대해 간략히 설명했었다.이번 포스팅에서는 좀 더 나아가 PMD의 Dataflow Anomaly Analysis에 대해서 다뤄보려한다.1. Dataflow Anomaly Analysis1) Dataflow Anomaly Analysis 란?Dataflow Anomaly Analysis, 한국어로 번역하면 ‘데이터 흐름 이상 분석’이란 무엇인가?PMD에서 정의하는 Dataflow Anomaly Analysis의 정의는 다음과 같다. 어떠한 데이터에 정의 되어있는 변수의 흐름을 쫓아가면서 변수의 잘못된 정의..." }, { "title": "정적 분석 도구 (Static Analysis Tool)", "url": "/posts/static_analysis/", "categories": "Project, Capstone, PMD", "tags": "project, capstone, java, pmd, static analysis tool, bug", "date": "2019-03-19 00:00:00 +0900", "snippet": "정적 분석 기법(Static Analysis)이란 무엇인가?이번 포스팅에서는 정적 분석 기법이 무엇이고, 정적 분석 중 하나인 PMD에 대해 알아보자.1. 정적 분석1) 정적 분석 기법(Static Analysis)이란? 소스 코드의 실행 없이, 코드의 의미를 분석해 결함을 찾아내는 코드 분석 기법정의만 읽었을 때 코드의 의미를 분석한다는 것이 좀처럼 와닿지 않을 수 있는데,이에 대한 설명은 정적 분석 도구의 전체적인 분석 과정을 통해 이야기하겠다.2) 정적 분석 도구의 분석 과정그림1. 정적 분석 과정 Program Mo..." } ]
