I"]<p>난이도 ★ ★ ☆<br />
이 문제도 ‘[스택/큐] 탑’ 문제랑 비슷하게 level2 인것 치고는 쉬운 문제라는 생각이 들었다. 
<br /></p>

<p><br /></p>

<h2 id="1-문제">1. 문제</h2>
<p>프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다.<br />
각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.</p>

<p>또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.</p>

<p>먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.</p>

<h3 id="제한조건">제한조건</h3>
<ul>
  <li>작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.</li>
  <li>작업 진도는 100 미만의 자연수입니다.</li>
  <li>작업 속도는 100 이하의 자연수입니다.</li>
  <li>배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 예를 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다.
<br />
<br /></li>
</ul>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<p>1) 
<br />
<br /></p>

<h2 id="3-해결코드">3. 해결코드</h2>
<h3 id="c">[C++]</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;vector&gt;
#include &lt;list&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">bridge_length</span><span class="p">,</span> <span class="kt">int</span> <span class="n">weight</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">truck_weights</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">list</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">lst</span> <span class="p">(</span><span class="n">bridge_length</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">total_weight</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="k">while</span><span class="p">(</span><span class="n">lst</span><span class="p">.</span><span class="n">size</span><span class="p">())</span> <span class="p">{</span>
        <span class="n">total_weight</span> <span class="o">-=</span> <span class="n">lst</span><span class="p">.</span><span class="n">front</span><span class="p">();</span>
        <span class="n">lst</span><span class="p">.</span><span class="n">pop_front</span><span class="p">();</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">truck_weights</span><span class="p">.</span><span class="n">size</span><span class="p">())</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">truck_weights</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">total_weight</span> <span class="o">&gt;</span> <span class="n">weight</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">lst</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="n">lst</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">truck_weights</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
                <span class="n">total_weight</span> <span class="o">+=</span> <span class="n">truck_weights</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
                <span class="n">truck_weights</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">truck_weights</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br />
<br /></p>

<h2 id="4-해결능력up-깊이-생각해보기">4. 해결능력UP, 깊이 생각해보기</h2>
<ul>
  <li><br />
<br /></li>
</ul>

<h2 id="5-참고해서-문제해결-٩-ᐛ-و">5. 참고해서 문제해결 ٩( ᐛ )و</h2>
<ul>
  <li><br />
<br /></li>
</ul>
:ET