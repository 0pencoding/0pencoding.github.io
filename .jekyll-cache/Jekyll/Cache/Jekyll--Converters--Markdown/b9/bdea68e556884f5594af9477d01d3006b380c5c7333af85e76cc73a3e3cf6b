I"Q'<p>난이도 ★ ★ ☆<br />
본 문제는 정말 마음에 안들게 푼 문제이다. 해결 후에 분명 더 좋은 방법이 있을거라고 생각은 드는데 쉽게 생각이 떠오르질 않아서 기분이 좋지 않았다. 그리고 다른 사람의 풀이를 보는데 ‘왜 이렇게 생각하지 못했지’, ‘이번 문제는 정말 못 풀었다’하는 생각이 들었다. 그래서 풀고나서 다른 사람의 코드를 참고해 다시 한 번 더 풀어서, 처음에 생각했던 알고리즘과 다른 사람의 코드를 참고해서 다시 내 나름대로 푼 알고리즘 두 가지가 있다.<br />
<br /></p>

<h2 id="1-문제">1. 문제</h2>
<p>Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 빨간색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다.</p>

<p><img src="https://grepp-programmers.s3.amazonaws.com/files/ybm/7c94563a35/2ff27ac9-97d0-43a9-9cf8-a344b8e7912e.png" alt="carpet" /></p>

<p>Leo는 집으로 돌아와서 아까 본 카펫의 빨간색과 갈색으로 색칠된 격자의 개수는 기억했지만, 전체 카펫의 크기는 기억하지 못했습니다.<br />
Leo가 본 카펫에서 갈색 격자의 수 brown, 빨간색 격자의 수 red가 매개변수로 주어질 때 카펫의 가로, 세로 크기를 순서대로 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>

<h3 id="제한조건">제한조건</h3>
<ul>
  <li>갈색 격자의 수 brown은 8 이상 5,000 이하인 자연수입니다.</li>
  <li>빨간색 격자의 수 red는 1 이상 2,000,000 이하인 자연수입니다.</li>
  <li>카펫의 가로 길이는 세로 길이와 같거나, 세로 길이보다 깁니다.
<br />
<br /></li>
</ul>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<p>1) 카펫이 정사각형일 때와 그렇지 않을 때를 구분한다.<br />
2) 정사각형일 때에는 (red의 제곱근+2) 값을 가로, 세로 값으로 반환한다.<br />
3) 정사각형이 아닐 때에는 세로의 길이를 1씩 줄어가면서 맞는 길이를 찾는다.<br />
4) 맞는 길이를 찾으면 마찮가지로 (가로+2), (세로+2) 값을 반환한다.<br />
<br />
<br /></p>

<h2 id="3-해결코드">3. 해결코드</h2>
<h3 id="c">[C++]</h3>
<h4 id="초반에-해결한-코드">초반에 해결한 코드</h4>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;cmath&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">brown</span><span class="p">,</span> <span class="kt">int</span> <span class="n">red</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">sqrt</span><span class="p">(</span><span class="mi">2000000</span><span class="p">);</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">pow_num</span> <span class="o">=</span> <span class="n">pow</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">pow_num</span> <span class="o">==</span> <span class="n">red</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">brown</span> <span class="o">==</span> <span class="p">(</span><span class="n">pow</span><span class="p">((</span><span class="n">i</span> <span class="o">+</span> <span class="mi">2</span><span class="p">),</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="n">red</span><span class="p">))</span> <span class="k">return</span> <span class="p">{</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="p">};</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">pow_num</span> <span class="o">&gt;=</span> <span class="n">red</span><span class="p">)</span> <span class="p">{</span>
            <span class="kt">int</span> <span class="n">sqrt_num</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
            
            <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">while</span><span class="p">(</span><span class="n">red</span> <span class="o">%</span> <span class="n">sqrt_num</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="n">sqrt_num</span><span class="o">--</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">brown</span> <span class="o">==</span> <span class="p">((</span><span class="n">sqrt_num</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="p">((</span><span class="n">red</span><span class="o">/</span><span class="n">sqrt_num</span><span class="p">)</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="n">red</span><span class="p">))</span>
                    <span class="k">return</span> <span class="p">{(</span><span class="n">red</span><span class="o">/</span><span class="n">sqrt_num</span><span class="p">)</span> <span class="o">+</span> <span class="mi">2</span><span class="p">,</span> <span class="n">sqrt_num</span> <span class="o">+</span> <span class="mi">2</span><span class="p">};</span>
                <span class="k">else</span> <span class="n">sqrt_num</span><span class="o">--</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /></p>

<h4 id="다른-사람의-코드를-참고해-수정한-코드">다른 사람의 코드를 참고해 수정한 코드</h4>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">brown</span><span class="p">,</span> <span class="kt">int</span> <span class="n">red</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">brown</span><span class="o">/</span><span class="mi">2</span> <span class="o">+</span> <span class="mi">2</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">w</span> <span class="o">=</span> <span class="n">len</span> <span class="o">-</span> <span class="mi">3</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">h</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
    
    <span class="k">while</span><span class="p">(</span><span class="n">w</span><span class="o">*</span><span class="n">h</span> <span class="o">!=</span> <span class="n">brown</span><span class="o">+</span><span class="n">red</span><span class="p">)</span> <span class="p">{</span> <span class="n">h</span><span class="o">++</span><span class="p">;</span> <span class="n">w</span><span class="o">--</span><span class="p">;</span> <span class="p">}</span>
    
    <span class="k">return</span> <span class="p">{</span><span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">};</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br />
<br /></p>

<h2 id="4-해결능력up-깊이-생각해보기">4. 해결능력UP, 깊이 생각해보기</h2>
<ul>
  <li>벡터를 선언하지 않고 바로 사용할 수 있다는… 신세계 (파이썬 같다)</li>
  <li>초반에 너무 복잡하게 풀었고 정말 좋지 않은 코드 방법으로 풀었다 → 자칫 잘못하면 무한 루트에 빠지는 불상사가..
<br />
<br /></li>
</ul>

<h2 id="5-참고해서-문제해결-٩-ᐛ-و">5. 참고해서 문제해결 ٩( ᐛ )و</h2>
<ul>
  <li>[C언어/C++] pow, sqrt 함수에 대해서(루트함수, 제곱, 제곱근) <a href="https://blockdmask.tistory.com/307">https://blockdmask.tistory.com/307</a><br />
어떤 수의 제곱을 구할 때는 pow() 함수 사용</li>
  <li>[C++] std :: vector 초기화하기 <a href="https://riptutorial.com/ko/cplusplus/example/1676/std----vector-%EC%B4%88%EA%B8%B0%ED%99%94%ED%95%98%EA%B8%B0">https://riptutorial.com/ko/cplusplus/example/1676/std----vector-%EC%B4%88%EA%B8%B0%ED%99%94%ED%95%98%EA%B8%B0</a><br />
vector를 초기화 할 때 vector v{n1, n2, …}; 식으로 바로 어떤 값을 할당하며 초기화 가능<br />
<span style="color: #c70000">※ 특정 변수에 vector를 할당할 필요없이 그냥 바로 사용할 때에는 {n1, n2, …} 식으로 사용 가능</span>
<br />
<br /></li>
</ul>
:ET