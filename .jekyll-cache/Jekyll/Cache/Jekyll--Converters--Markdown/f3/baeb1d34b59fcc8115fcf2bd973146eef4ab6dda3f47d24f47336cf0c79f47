I"B<p>Difficulty: Hard<br />
The difficulty of this problem was hard, but when I saw the problem, I thought I could solve. So, I challenged it with curiosity, but the result was a little insufficient. It passed 49 of the total 51 test cases. It’s a little lacking, but I hope you focus on the algorithm. And if you know where my code is wrong, please let me know. ´•ﻌ•`<br />
<br /></p>

<p><br /></p>

<h2 id="1-problem">1. Problem</h2>
<p>Given a string num representing the digits of a very large integer and an integer k.<br />
You are allowed to swap any two adjacent digits of the integer at most k times.<br />
Return the minimum integer you can obtain also as a string.<br />
<br /></p>

<p><strong>Example1 :</strong><br />
<img src="https://assets.leetcode.com/uploads/2020/06/17/q4_1.jpg" alt="example1" width="600" /></p>
<blockquote>
  <p><strong>Input:</strong> num = “4321”, k = 4<br />
<strong>Output:</strong> “1342”<br />
<strong>Explanation:</strong> The steps to obtain the minimum integer from 4321 with 4 adjacent swaps are shown.<br />
<br /></p>
</blockquote>

<p><strong>Example2 :</strong></p>
<blockquote>
  <p><strong>Input:</strong> num = “22”, k = 22<br />
<strong>Output:</strong> “22”<br />
<br /></p>
</blockquote>

<h3 id="constraints">Constraints</h3>
<ul>
  <li>1 &lt;= num.length &lt;= 30000</li>
  <li>num contains digits only and doesn’t have leading zeros.</li>
  <li>1 &lt;= k &lt;= 10^9
<br /><br /><br /></li>
</ul>

<h2 id="2-thinking-algorithm">2. Thinking Algorithm</h2>
<ol>
  <li><br /><br /></li>
</ol>

<h2 id="3-solution">3. Solution</h2>
<h3 id="c">[C++]</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="n">string</span> <span class="n">minInteger</span><span class="p">(</span><span class="n">string</span> <span class="n">num</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        
        <span class="n">string</span> <span class="n">sorted_num</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
        <span class="n">sort</span><span class="p">(</span><span class="n">sorted_num</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">sorted_num</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>

        <span class="k">while</span><span class="p">(</span><span class="n">k</span> <span class="o">&amp;&amp;</span> <span class="n">num</span> <span class="o">!=</span> <span class="s">""</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">num</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">sorted_num</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">&lt;=</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">k</span> <span class="o">-=</span> <span class="n">num</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">sorted_num</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="n">sorted_num</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="n">num</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">num</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">sorted_num</span><span class="p">[</span><span class="n">i</span><span class="p">]),</span> <span class="mi">1</span><span class="p">);</span>
                <span class="n">sorted_num</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
                <span class="n">i</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">i</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="n">answer</span> <span class="o">+=</span> <span class="n">num</span><span class="p">;</span>
        
        <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>
<p><br /><br /><br /></p>

<h2 id="4-to-think-deeper">4. To Think Deeper</h2>
<ul>
  <li>I checked the test case that didn’t pass, and it was a timeout, so is the algorithm itself correct?</li>
  <li>I think the algorithm is simple and well-organized
<br /><br /><br /></li>
</ul>

<h2 id="5-reference-٩-ᐛ-و">5. Reference ٩( ᐛ )و</h2>
<ul>
  <li>[C++ official doc] std:string:erase <a href="https://www.cplusplus.com/reference/string/string/erase/">https://www.cplusplus.com/reference/string/string/erase/</a><br />
Use erase() to erase a string, first parameter is starting point of erasing and second is number of erasing
<br /><br /><br /></li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>출처: LeetCode Contest, https://leetcode.com/contest/
</code></pre></div></div>
:ET