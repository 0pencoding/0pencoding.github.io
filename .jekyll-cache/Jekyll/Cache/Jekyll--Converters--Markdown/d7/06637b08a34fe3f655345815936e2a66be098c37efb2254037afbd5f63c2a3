I"+<p>오늘 이 문제를 풀기 전에 약간 당황했다. 프로그래머스의 문제가 몇 개 사라졌는데 바로 어제 풀었던 ‘<a href="http://localhost:4000/posts/buget">[이분탐색] 예산</a>’ 문제가 사라져 있어서 알게되었다 😅 당황해서 다른 문제들도 몇 개 봤는데 다이나믹 프로그래밍 문제 몇 개 외에도 조금씩 사라졌더라… 잠깐의 오류인지, 아니면 프로그래머스 측에서 아예 문제를 없애버린 건지는 모르겠지만 아직 풀어보지 못한 문제가 하나씩 사라지니 마음이 조금 조급해졌다. 문제가 더 없어지기 전에 하루 빨리 프로그래머스 고득점 kit을 마무리하고싶다! 뽜야! (૭ ᐕ)૭<br />
<br />
<br /></p>

<h2 id="1-문제">1. 문제</h2>

<p>n명이 입국심사를 위해 줄을 서서 기다리고 있습니다.<br />
각 입국심사대에 있는 심사관마다 심사하는데 걸리는 시간은 다릅니다.</p>

<p>처음에 모든 심사대는 비어있습니다. 한 심사대에서는 동시에 한 명만 심사를 할 수 있습니다.<br />
가장 앞에 서 있는 사람은 비어 있는 심사대로 가서 심사를 받을 수 있습니다.<br />
하지만 더 빨리 끝나는 심사대가 있으면 기다렸다가 그곳으로 가서 심사를 받을 수도 있습니다.</p>

<p>모든 사람이 심사를 받는데 걸리는 시간을 최소로 하고 싶습니다.</p>

<p>입국심사를 기다리는 사람 수 n, 각 심사관이 한 명을 심사하는데 걸리는 시간이 담긴 배열 times가 매개변수로 주어질 때, 모든 사람이 심사를 받는데 걸리는 시간의 최솟값을 return 하도록 solution 함수를 작성해주세요.</p>

<h3 id="제한조건">제한조건</h3>

<ul>
  <li>입국심사를 기다리는 사람은 1명 이상 1,000,000,000명 이하입니다.</li>
  <li>각 심사관이 한 명을 심사하는데 걸리는 시간은 1분 이상 1,000,000,000분 이하입니다.</li>
  <li>심사관은 1명 이상 100,000명 이하입니다.
<br /><br /><br /></li>
</ul>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>

<ol>
  <li><code class="language-plaintext highlighter-rouge">can_check()</code> 함수는 solution에서 매개변수로 받은 <code class="language-plaintext highlighter-rouge">times</code>, <code class="language-plaintext highlighter-rouge">n</code> 변수와 심사 시간을 인수로 주고<br />
해당 심사 시간에 <code class="language-plaintext highlighter-rouge">n</code>명의 심사가 가능하면 <code class="language-plaintext highlighter-rouge">true</code>, 못하면 <code class="language-plaintext highlighter-rouge">false</code>를 반환하는 함수로, 해당 함수를 먼저 정의해준다.</li>
  <li>제한조건이 입국심사를 기다리는 사람이 1 이상 100,000 이하이고 각 심사관이 심사하는데 걸리는 시간은 1,000,000,000분 이하이기 때문에<br />
시작값 <code class="language-plaintext highlighter-rouge">left</code>를 1, 끝 값 <code class="language-plaintext highlighter-rouge">right</code>를 1,000,000,000,000,000,000으로 초기화하여 생성한다.</li>
  <li>이분탐색을 위해 <code class="language-plaintext highlighter-rouge">left</code>와 <code class="language-plaintext highlighter-rouge">right</code>의 중간값을 <code class="language-plaintext highlighter-rouge">mid</code> 변수에 초기화하여 생성한다.</li>
  <li><code class="language-plaintext highlighter-rouge">left</code>가 <code class="language-plaintext highlighter-rouge">right</code>보다 작은 동안 다음을 반복해 이분탐색을 진행한다.</li>
  <li>심사 시간 <code class="language-plaintext highlighter-rouge">mid</code>동안 <code class="language-plaintext highlighter-rouge">n</code>명의 심사가 가능하면 <code class="language-plaintext highlighter-rouge">mid-1</code>동안 <code class="language-plaintext highlighter-rouge">n</code>명 심사가 가능한지 확인해 가능하지 않으면 <code class="language-plaintext highlighter-rouge">mid</code>를 반환한다.<br />
(<code class="language-plaintext highlighter-rouge">mid</code>동안 <code class="language-plaintext highlighter-rouge">n</code>명의 심사가 가능하고, <code class="language-plaintext highlighter-rouge">mid-1</code>동안 <code class="language-plaintext highlighter-rouge">n</code>명의 심사가 불가능해야 <code class="language-plaintext highlighter-rouge">mid</code>가 최소 심사시간이라는 의미이므로)</li>
  <li><code class="language-plaintext highlighter-rouge">mid-1</code>동안 <code class="language-plaintext highlighter-rouge">n</code>명 심사가 가능하면 심사 시간이 더 작아질 수 있으므로 <code class="language-plaintext highlighter-rouge">right</code>를 <code class="language-plaintext highlighter-rouge">mid</code>로 재할당하여 이분탐색을 진행한다.</li>
  <li><code class="language-plaintext highlighter-rouge">mid</code>동안 <code class="language-plaintext highlighter-rouge">n</code>명 심사가 불가능하면 심사시간이 더 커야하므로 <code class="language-plaintext highlighter-rouge">left</code>를 <code class="language-plaintext highlighter-rouge">mid</code>로 재할당하여 이분탐색을 진행한다.</li>
  <li>반복문 내에서 값들이 반환되지만, 반복문이 끝나면 마지막에 <code class="language-plaintext highlighter-rouge">mid</code>를 반환해주고 끝낸다.<br />
<br /><br /></li>
</ol>

<h2 id="3-해결코드">3. 해결코드</h2>

<h3 id="c">[C++]</h3>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="cp">#include &lt;vector&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">bool</span> <span class="nf">can_check</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">times</span><span class="p">,</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">total_time</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">long</span> <span class="kt">long</span> <span class="n">total</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">time</span> <span class="o">:</span> <span class="n">times</span><span class="p">)</span>
        <span class="n">total</span> <span class="o">+=</span> <span class="n">total_time</span> <span class="o">/</span> <span class="n">time</span><span class="p">;</span>

    <span class="k">return</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="n">total</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">long</span> <span class="kt">long</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">times</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">long</span> <span class="kt">long</span> <span class="n">left</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">right</span> <span class="o">=</span> <span class="mi">1000000000000000000</span><span class="p">;</span>
    <span class="kt">long</span> <span class="kt">long</span> <span class="n">mid</span> <span class="o">=</span> <span class="n">right</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>

    <span class="k">while</span><span class="p">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">right</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">can_check</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">times</span><span class="p">,</span> <span class="n">mid</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">can_check</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">times</span><span class="p">,</span> <span class="n">mid</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span> <span class="k">return</span> <span class="n">mid</span><span class="p">;</span>
            <span class="n">right</span> <span class="o">=</span> <span class="n">mid</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="n">left</span> <span class="o">=</span> <span class="n">mid</span><span class="p">;</span>
        <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">right</span> <span class="o">+</span> <span class="n">left</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">mid</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /><br /></p>

<h2 id="4-해결능력up-깊이-생각해보기">4. 해결능력UP, 깊이 생각해보기</h2>

<ul>
  <li>정수형 데이터 타입 <code class="language-plaintext highlighter-rouge">long long</code> 범위
<br /><br /><br /></li>
</ul>

<h2 id="5-참고해서-문제해결-٩-ᐛ-و">5. 참고해서 문제해결 ٩( ᐛ )و</h2>

<ul>
  <li>데이터 형식 범위 <a href="http://melonicedlatte.com/algorithm/2018/03/04/022437.html">http://melonicedlatte.com/algorithm/2018/03/04/022437.html</a>
    <blockquote>
      <ul>
        <li>정수형 데이터 타입 <code class="language-plaintext highlighter-rouge">long long</code> 범위는 -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 이다.</li>
      </ul>
    </blockquote>
  </li>
</ul>

<p><br /><br /><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges
</pre></td></tr></tbody></table></code></pre></div></div>
:ET