I"M<p>난이도 ★ ★ ★ ☆ ☆<br />
이전 문제에 비해 이 문제는 빨리 끝나서 좋았다. 그런데 처음에 우선순위 큐를 사용해서 풀려고 했다가 망해서 멀티셋을 사용했는데, 멀티셋에서 내가 잘 모르는 부분에 대해서 끙끙대다가 겨우 해결했다. 힘들긴 했지만 새롭게 알게된 것도 있었고, 앞으로 어떻게 사용해야겠다는 생각이 세워져서 많이 배울 수 있는 문제였다 ˘ڡ˘४<br />
<br /></p>

<p><br /></p>

<h2 id="1-문제">1. 문제</h2>
<p>이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다.</p>

<table>
  <thead>
    <tr>
      <th>명령어</th>
      <th>수신 탑 (높이)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>I 숫자</td>
      <td>큐에 주어진 숫자를 삽입합니다.</td>
    </tr>
    <tr>
      <td>D 1</td>
      <td>큐에서 최댓값을 삭제합니다.</td>
    </tr>
    <tr>
      <td>D -1</td>
      <td>큐에서 최솟값을 삭제합니다.</td>
    </tr>
  </tbody>
</table>

<p>이중 우선순위 큐가 할 연산 operations가 매개변수로 주어질 때,<br />
모든 연산을 처리한 후 큐가 비어있으면 [0,0] 비어있지 않으면 [최댓값, 최솟값]을 return 하도록 solution 함수를 구현해주세요.</p>

<h3 id="제한조건">제한조건</h3>
<ul>
  <li>jobs의 길이는 1 이상 500 이하입니다.</li>
  <li>jobs의 각 행은 하나의 작업에 대한 [작업이 요청되는 시점, 작업의 소요시간] 입니다.</li>
  <li>각 작업에 대해 작업이 요청되는 시간은 0 이상 1,000 이하입니다.</li>
  <li>각 작업에 대해 작업의 소요시간은 1 이상 1,000 이하입니다.</li>
  <li>하드디스크가 작업을 수행하고 있지 않을 때에는 먼저 요청이 들어온 작업부터 처리합니다.
<br /><br /><br /></li>
</ul>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<ol>
  <li><br /><br /></li>
</ol>

<h2 id="3-해결코드">3. 해결코드</h2>
<h3 id="c">[C++]</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;sstream&gt;
#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;set&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">getNum</span><span class="p">(</span><span class="n">string</span> <span class="n">str</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">num</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">str_num</span> <span class="o">=</span> <span class="n">str</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
    
    <span class="n">stringstream</span> <span class="n">ssInt</span><span class="p">(</span><span class="n">str_num</span><span class="p">);</span>
    <span class="n">ssInt</span> <span class="o">&gt;&gt;</span> <span class="n">num</span><span class="p">;</span>
    
    <span class="k">return</span> <span class="n">num</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">operations</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">multiset</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">pq</span><span class="p">;</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="n">string</span> <span class="n">op</span> <span class="o">:</span> <span class="n">operations</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">op</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'I'</span><span class="p">)</span> <span class="n">pq</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">getNum</span><span class="p">(</span><span class="n">op</span><span class="p">));</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">op</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'D'</span> <span class="o">&amp;&amp;</span> <span class="n">pq</span><span class="p">.</span><span class="n">size</span><span class="p">())</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">op</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'-'</span><span class="p">)</span> <span class="n">pq</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">pq</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
            <span class="k">else</span> <span class="n">pq</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="o">--</span><span class="n">pq</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">pq</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="k">return</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">};</span>
    <span class="k">return</span> <span class="p">{</span><span class="o">*--</span><span class="n">pq</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="o">*</span><span class="n">pq</span><span class="p">.</span><span class="n">begin</span><span class="p">()};</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /><br /><br /></p>

<h2 id="4-해결능력up-깊이-생각해보기">4. 해결능력UP, 깊이 생각해보기</h2>
<ul>
  <li><br /><br /><br /></li>
</ul>

<h2 id="5-참고해서-문제해결-٩-ᐛ-و">5. 참고해서 문제해결 ٩( ᐛ )و</h2>
<ul>
  <li><a href="https://coding-insider.tistory.com/entry/sort-사용법-priorityqueue에서의-sort-차이">https://coding-insider.tistory.com/entry/sort-사용법-priorityqueue에서의-sort-차이</a>
<br /><br /><br /></li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges
</code></pre></div></div>
:ET