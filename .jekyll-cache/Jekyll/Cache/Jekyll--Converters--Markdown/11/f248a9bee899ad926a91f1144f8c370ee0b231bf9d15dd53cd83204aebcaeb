I"n,<main class="container">
  <section class="about">
    <a href="/"><img src="/assets/img/profile//profile.png" alt="YuJin Kim" /></a>
    <h2 id="title">
      <a href="/">YuJin Kim</a>
    </h2>
    <p class="tagline">SW Engineer</p>
    <ul class="social"><a href="https://github.com/0pencoding">
          <li>
            <i class="icon-github-circled"></i>
          </li>
        </a></ul>

    <!--<nav class="navigation">
        <ul>
          
            <li>
              <a href="/about/">ABOUT</a>
            </li>
          
            <li>
              <a href="/tags/">TAGS</a>
            </li>
          
        </ul>
      </nav>-->

    <p>&copy;
      2020</p>
  </section>
  <section class="content">
    <div class="post-container">
  <a class="post-link" href="/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EA%B3%A0%EB%93%9D%EC%A0%90kit/2020/07/15/%ED%9E%99_%EC%9D%B4%EC%A4%91%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84%ED%81%90_level3.html">
    <h2 class="post-title">프로그래머스 코딩테스트 고득점 Kit : [힙] 이중 우선순위 큐</h2>
  </a>
  <div class="post-meta">
    <ul class="post-tags">
          <li>프로그래머스 고득점 Kit</li>
        
          <li>Heap</li>
        
          <li>Level 3</li>
        
          <li>Algorithm</li>
        
          <li>C++</li>
        </ul>
    <div class="post-date"><i class="icon-calendar"></i>Jul 15, 2020</div>
  </div>

  <div class="post">
    <p>난이도 ★ ★ ★ ☆ ☆<br />
이전 문제에 비해 이 문제는 빨리 끝나서 좋았다. 그런데 처음에 우선순위 큐를 사용해서 풀려고 했다가 망해서 멀티셋을 사용했는데, 멀티셋에서 내가 잘 모르는 부분에 대해서 끙끙대다가 겨우 해결했다. 힘들긴 했지만 새롭게 알게된 것도 있었고, 앞으로 어떻게 사용해야겠다는 생각이 세워져서 많이 배울 수 있는 문제였다 ˘ڡ˘४<br />
<br /></p>

<p><br /></p>

<h2 id="1-문제">1. 문제</h2>
<p>이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다.</p>

<table>
  <thead>
    <tr>
      <th>명령어</th>
      <th>수신 탑 (높이)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>I 숫자</td>
      <td>큐에 주어진 숫자를 삽입합니다.</td>
    </tr>
    <tr>
      <td>D 1</td>
      <td>큐에서 최댓값을 삭제합니다.</td>
    </tr>
    <tr>
      <td>D -1</td>
      <td>큐에서 최솟값을 삭제합니다.</td>
    </tr>
  </tbody>
</table>

<p>이중 우선순위 큐가 할 연산 operations가 매개변수로 주어질 때,<br />
모든 연산을 처리한 후 큐가 비어있으면 [0,0] 비어있지 않으면 [최댓값, 최솟값]을 return 하도록 solution 함수를 구현해주세요.</p>

<h3 id="제한조건">제한조건</h3>
<ul>
  <li>operations는 길이가 1 이상 1,000,000 이하인 문자열 배열입니다.</li>
  <li>operations의 원소는 큐가 수행할 연산을 나타냅니다.
    <ul>
      <li>원소는 “명령어 데이터” 형식으로 주어집니다.- 최댓값/최솟값을 삭제하는 연산에서 최댓값/최솟값이 둘 이상인 경우, 하나만 삭제합니다.</li>
    </ul>
  </li>
  <li>빈 큐에 데이터를 삭제하라는 연산이 주어질 경우, 해당 연산은 무시합니다.
<br /><br /><br /></li>
</ul>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<ol>
  <li>우선순위 큐처럼 사용할 멀티셋 pq를 생성한다.</li>
  <li>operations 벡터의 원소를 반복한다.</li>
  <li>명령어가 I일 경우에 뒤 따라오는 숫자를 멀티셋에 넣는다.</li>
  <li>명령어가 D이고, 삭제할 원소가 멀티셋에 존재하면 뒤 따라오는 명령어를 확인한다.</li>
  <li>이어지는 명령어가 -이면 최소값인 멀티셋의 맨 앞의 원소를 삭제한다.</li>
  <li>이어지는 명령어가 -가 아니면 최댓값인 멀티셋의 맨 뒤 원소를 삭제한다.</li>
  <li>반복이 끝나고 멀티셋을 확인해 원소가 존재하지 않으면 {0, 0} 벡터를, 원소가 존재하면 {최댓값, 최솟값} 벡터를 반환한다.<br />
<br /><br /></li>
</ol>

<h2 id="3-해결코드">3. 해결코드</h2>
<h3 id="c">[C++]</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;sstream&gt;
#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;set&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">getNum</span><span class="p">(</span><span class="n">string</span> <span class="n">str</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">num</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">str_num</span> <span class="o">=</span> <span class="n">str</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
    
    <span class="n">stringstream</span> <span class="n">ssInt</span><span class="p">(</span><span class="n">str_num</span><span class="p">);</span>
    <span class="n">ssInt</span> <span class="o">&gt;&gt;</span> <span class="n">num</span><span class="p">;</span>
    
    <span class="k">return</span> <span class="n">num</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">operations</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">multiset</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">pq</span><span class="p">;</span>
    
    <span class="k">for</span><span class="p">(</span><span class="n">string</span> <span class="n">op</span> <span class="o">:</span> <span class="n">operations</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">op</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'I'</span><span class="p">)</span> <span class="n">pq</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">getNum</span><span class="p">(</span><span class="n">op</span><span class="p">));</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">op</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'D'</span> <span class="o">&amp;&amp;</span> <span class="n">pq</span><span class="p">.</span><span class="n">size</span><span class="p">())</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">op</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'-'</span><span class="p">)</span> <span class="n">pq</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">pq</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
            <span class="k">else</span> <span class="n">pq</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="o">--</span><span class="n">pq</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">pq</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="k">return</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">};</span>
    <span class="k">return</span> <span class="p">{</span><span class="o">*--</span><span class="n">pq</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="o">*</span><span class="n">pq</span><span class="p">.</span><span class="n">begin</span><span class="p">()};</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /><br /><br /></p>

<h2 id="4-해결능력up-깊이-생각해보기">4. 해결능력UP, 깊이 생각해보기</h2>
<ul>
  <li>stringstream 사용하는 방법이 아직 익숙하지 않다</li>
  <li>문자열의 부분 문자열 추출하는 방법</li>
  <li>멀티셋에 삽입, 삭제하는 방법 (이터레이터 제대로 사용하기)
<br /><br /><br /></li>
</ul>

<h2 id="5-참고해서-문제해결-٩-ᐛ-و">5. 참고해서 문제해결 ٩( ᐛ )و</h2>
<ul>
  <li>[C++ 공식문서] std:multiset:erase <a href="https://www.cplusplus.com/reference/set/multiset/erase/">https://www.cplusplus.com/reference/set/multiset/erase/</a><br />
멀티셋의 원소를 삭제할 때는 iterator를 인자로 받아 해당 iterator가 가르키는 원소 삭제, multiset.erase(iterator)` 형식으로 사용</li>
  <li>
    <p>[C++ 공식문서] std:multiset:insert <a href="https://www.cplusplus.com/reference/set/multiset/insert/">https://www.cplusplus.com/reference/set/multiset/insert/</a></p>
  </li>
  <li>
    <p>C++ string을 int로 변경하는 방법 <a href="https://psychoria.tistory.com/709">https://psychoria.tistory.com/709</a></p>
  </li>
  <li>C++ 레퍼런스 - string 의 substr 함수 <a href="https://modoocode.com/235">https://modoocode.com/235</a></li>
</ul>

<p><br /><br /><br /></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges
</code></pre></div></div>

  </div><div id="disqus_thread" style="margin-top:25px"></div>
  <script>
    var disqus_config = function () {
      this.page.url = 'http://localhost:4000/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EA%B3%A0%EB%93%9D%EC%A0%90kit/2020/07/15/%ED%9E%99_%EC%9D%B4%EC%A4%91%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84%ED%81%90_level3.html';
      this.page.identifier = 'http://localhost:4000/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EA%B3%A0%EB%93%9D%EC%A0%90kit/2020/07/15/%ED%9E%99_%EC%9D%B4%EC%A4%91%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84%ED%81%90_level3.html';
    };
    (function () {
      var d = document, s = d.createElement('script');
      s.src = 'https://0pencoding.disqus.com/embed.js';
      s.setAttribute('data-timestamp', +new Date());
      (d.head || d.body).appendChild(s);
    })();
  </script>
  <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments
      powered by Disqus.</a></noscript></div>

  </section>
</main>
<script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-150778693-1"></script>

<script>
window.dataLayer = window.dataLayer || [];
function gtag() { dataLayer.push(arguments); }
gtag('js', new Date());

gtag('config', 'UA-150778693-1');
</script>

:ET