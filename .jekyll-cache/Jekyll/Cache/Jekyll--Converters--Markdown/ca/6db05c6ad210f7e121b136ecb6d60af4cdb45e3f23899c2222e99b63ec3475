I",<p>난이도 ★ ★ ☆<br />
본 문제는 문제를 읽자마자 바로 알고리즘이 떠올랐다. 하지만 정작 문제는 잘 해결되지 않았는데, 내가 문제를 자세하게 읽지 않아서 문제를 잘못 이해하고 있었다. 보통의 숫자야구를 생각해서 당연히 중복된 숫자가 가능하고, 0도 포함되어 있을거라 생각했으나 그게 아니었던 것이 복병이었던 것 같다. 역시 문제 속에 답이 있다고…ŏ̥םŏ̥̥<br />
<br /></p>

<h2 id="1-문제">1. 문제</h2>
<p>한자리 숫자가 적힌 종이 조각이 흩어져있습니다.<br />
흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다.<br />
각 종이 조각에 적힌 숫자가 적힌 문자열 numbers가 주어졌을 때, 종이 조각으로 만들 수 있는 소수가 몇 개인지 return 하도록 solution 함수를 완성해주세요.</p>

<h3 id="제한조건">제한조건</h3>
<ul>
  <li>numbers는 길이 1 이상 7 이하인 문자열입니다.</li>
  <li>numbers는 0~9까지 숫자만으로 이루어져 있습니다.</li>
  <li>013은 0, 1, 3 숫자가 적힌 종이 조각이 흩어져있다는 의미입니다.
<br />
<br /></li>
</ul>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<p>1) 소수 2, 3의 경우는 따로 numbers에 포함 여부를 확인해 answer값을 증가시킨다.<br />
2) 6n - 1, 6n + 1 꼴의 자연수가 소수가 맞는지 is_prime() 함수를 통해 확인한다.<br />
3) 소수가 맞으면, numbers 카드들로 해당 소수를 만들수있는지 make_prime_number() 함수를 통해 확인한다.<br />
4) 만들수 있으면 answer값을 증가시킨다.<br />
<br />
<br /></p>

<h2 id="3-해결코드">3. 해결코드</h2>
<h3 id="c">[C++]</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;iostream&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">baseball</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">123</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">988</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">bool</span> <span class="n">is_answer</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
        <span class="n">string</span> <span class="n">num</span> <span class="o">=</span> <span class="n">to_string</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">num</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">'0'</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">num</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">||</span> <span class="n">num</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">num</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">||</span> <span class="n">num</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">num</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="k">continue</span><span class="p">;</span>
        
        <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="n">j</span> <span class="o">:</span> <span class="n">baseball</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">string</span> <span class="n">baseball_num</span> <span class="o">=</span> <span class="n">to_string</span><span class="p">(</span><span class="n">j</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
            <span class="kt">int</span> <span class="n">strike</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">ball</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">baseball_num</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="n">strike</span><span class="o">++</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">baseball_num</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="n">strike</span><span class="o">++</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="n">baseball_num</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="n">strike</span><span class="o">++</span><span class="p">;</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">baseball_num</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="n">ball</span><span class="o">++</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">baseball_num</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="n">ball</span><span class="o">++</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">baseball_num</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="n">ball</span><span class="o">++</span><span class="p">;</span>
            
            <span class="n">ball</span> <span class="o">-=</span> <span class="n">strike</span><span class="p">;</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">j</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="n">strike</span> <span class="o">||</span> <span class="n">j</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">!=</span> <span class="n">ball</span><span class="p">)</span>
                <span class="n">is_answer</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">is_answer</span><span class="p">)</span> <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br />
<br /></p>

<h2 id="4-해결능력up-깊이-생각해보기">4. 해결능력UP, 깊이 생각해보기</h2>
<ul>
  <li>문자열의 길이가 최대 7이기 때문에 결국 2부터 9999999까지 전부 돌려보는 수밖에…</li>
  <li>조금이라도 효율성을 좋기 하기 위해 “2, 3을 제외한 모든 소수는 ‘6n - 1’, ‘6n + 1’ 꼴이다”라는 소수의 특징을 사용했다</li>
  <li>어떤 숫자가 소수인지 확인하는 가장 빠른 알고리즘(으로 알고있는데 확실할진…)은 2부터 해당 숫자의 루트 값까지 1씩 증가시켜 나누어서 나눠 떨어지는 값이 없는 숫자이다</li>
  <li>stoi() 함수가 먹지를 않아서 ASCII-code를 이용했다
<br />
<br /></li>
</ul>

<h2 id="5-참고해서-문제해결-٩-ᐛ-و">5. 참고해서 문제해결 ٩( ᐛ )و</h2>
<ul>
  <li>[C++ 정리] 자료형의 크기 및 범위 <a href="http://myblog.opendocs.co.kr/archives/1230">http://myblog.opendocs.co.kr/archives/1230</a><br />
9999999까지의 숫자를 나타내는데 int형을 사용해도 될지 확인하기 위해 검색 → 사용 가능!</li>
  <li>[Convert a string to int in C++] <a href="https://www.techiedelight.com/convert-string-to-int-cpp/">https://www.techiedelight.com/convert-string-to-int-cpp/</a><br />
string을 int형으로 나타내기위해 검색했으나 모두 에러 발생… 다른 사람들은 안그러던데 왜 이러지ㅠ</li>
  <li>[ASCII code 활용 : char to int (문자형, 정수형 변환)] <a href="https://m.blog.naver.com/PostView.nhn?blogId=xxsaintxx&amp;logNo=220785227573&amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F">https://m.blog.naver.com/PostView.nhn?blogId=xxsaintxx&amp;logNo=220785227573&amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F</a><br />
char to int를 하기 위해서는 48을 빼면된다, 반대는 48을 더하면 되고 :)</li>
  <li>[소수] <a href="https://opentutorials.org/course/1685/9469">https://opentutorials.org/course/1685/9469</a><br />
소수의 특징, “2, 3을 제외한 모든 소수는 ‘6n - 1’, ‘6n + 1’ 꼴이다”</li>
  <li>[C언어/C++] pow, sqrt 함수에 대해서(루트함수, 제곱, 제곱근) <a href="https://blockdmask.tistory.com/307">https://blockdmask.tistory.com/307</a><br />
어떤 숫자의 제곱을 구하기 위해서는 sqrt() 함수 사용
<br />
<br /></li>
</ul>
:ET