I"<p>드디어 마지막이다. 길었다면 길고 짧았다면 짧은 6개의 프로젝트가 거의 막을 내리고있다. 여기까지 포기하지않고 온 사람들에게는 정말 대단하고 수고했다고 박수쳐주고싶다. 그럼 마지막까지 잘 마무리 짓길 바라면서, 이번 프로젝트는 <a href="https://0pencoding.github.io/about/java/gui/2020/03/14/JavaCamp_Round5_%EC%9C%A1%EB%AA%A9.html">이전 라운드</a>에서 구현했던 육목에 네트워크를 적용시켜 실제로 두 플레이어가 육목 게임이 가능하도록 하는 것이다. 프로젝트를 진행하지 않는 사람들에게는 나의 코드와 설명이 유용한 정보가 되길 바란다 :)<br />
<br /></p>

<p><br /></p>
<h3 id="-기간-ㅤ4일">⏰ 기간 ⏰ㅤ4일</h3>
<p><br /></p>

<h2 id="1-기능">1. 기능</h2>
<ul>
  <li>서로 다른 컴퓨터에서 육목 게임이 가능하도록 네트워크를 연결</li>
  <li>이외에는 자유롭게 자신이 선보이고 싶은 기능, 있으면 좋겠다 싶은 기능 추가
<br /><br /><br /></li>
</ul>

<h2 id="2-시작">2. 시작!</h2>
<p>마지막 프로젝트인만큼 끝까지 잘 마무리 지었으면 좋겠다.<br />
이번 프로젝트에서는 네트워크와 관련해서 특히 소켓프로그래밍, TCP 개념에 대해 공부해야할 것이다.<br />
내가 프로젝트를 진행했을 당시에는 개념이 너무 어려워서 이해하지않고 그냥 사용했었는데,<br />
이와 관련해서도 한 번 정리하면 좋을 것 같다는 생각이 들어 다시 포스팅을 정리해보려한다.<br />
Reference 자료 외에도 더 많이 찾아보면서 개념을 익히고 네트워크를 잘 연결시켰으면 좋겠다.<br />
Reference 아래로는 나의 결과물과 설명이 이어진다.<br />
꼭 4일 후에 본 프로젝트를 마무리하고 확인하길 바란다.<br />
그냥 내 코드와 결과물을 보고 공부한다면 그것도 물론 공부가 되겠지만 자신이 직접 찾아가며 한 공부보다는 훨씬 못할 것이다.<br />
또한 말했듯이 그 당시에는 몰랐지만 지금보면 내 코드도 잘 짜여진 코드는 아님을 참고해주었으면 좋겠다 (-﹏-。;)</p>

<h3 id="reference">Reference</h3>
<ul>
  <li><br /><br /><br /></li>
</ul>

<h2 id="3-결과물">3. 결과물</h2>
<p><br />
<!-- ![network_connect6](/assets/img/post/About_me/JavaCamp/network_connect6.png){:width="800px"}   --></p>

<h3 id="구현-기능">구현 기능</h3>
<ul>
  <li>서로 다른 컴퓨터에서 육목 게임이 가능하도록 네트워크를 연결</li>
  <li>이전 육목 프로젝트에서 더해진 기능으로는 여러 사람이 대전할 수 있도록 6개의 방 생성</li>
</ul>

<h3 id="보완-해야할-부분">보완 해야할 부분</h3>
<!-- - restart 했을 경우 음소거되었던 배경 노래가 다시 시작하는 문제
- restart 했을 경우 시작하기 전에 시간이 흘러가는 문제
- 게임의 시작 부분으로 넘어갈 수 있는 Go Home 버튼 추가
- 일시정지 기능 추가 -->
<p><br /><br /><br /></p>

<h2 id="4-세부-기능-캡쳐">4. 세부 기능 캡쳐</h2>
<p><br />
<!-- ㅤ![network_connect6_detail](/assets/img/post/About_me/JavaCamp/network_connect6_detail.png){:width="900px"} -->
<br /><br /><br /></p>

<h2 id="5-코드-세부-설명">5. 코드 세부 설명</h2>
<p><br />
<!-- ![network_connect6_uml](/assets/img/post/About_me/JavaCamp/network_connect6_uml.gif){:width="750px"}   --></p>

<p>위 사진은 내 코드를 UML Diagram으로 나타낸 것이다.<br />
좀 더 잘짜면 객체 지향 언어의 장점인 재사용을 이용해서 코드를 간단하게 할 수 있을 것 같은데,<br />
다음에 시간과 기회가 된다면 코드를 refactoring 해야겠다.</p>

<p>코드를 세부적으로 설명하면 아래와 같다.</p>
<ul>
  <li><strong><code class="highlighter-rouge">Main class</code></strong> : Screen1, Screen2, Screen3 화면들의 navigation을 담당하는 클래스
    <ul>
      <li><strong><code class="highlighter-rouge">Main()</code></strong> : Frame을 설정해서 첫 화면을 보여주고 모든 Screen 각각에 맞는 ActionListener를 설정</li>
    </ul>
  </li>
</ul>

<p>UML Diagram을 보면 알겠지만, 주요 클래스와 함수들만 설명했다.<br />
혹시 코드를 보고 궁금한 점이나 문의할 내용이 있으면 댓글로 남겨주세요!
<br /><br /><br /></p>

<h2 id="6-github-및-프로젝트-보고서">6. GitHub 및 프로젝트 보고서</h2>
<p>제 코드는 아래 GitHub에서 확인 가능합니다 :)<br />
(배경음악은 파일이 너무 커서 올리지 못했습니다. 실행하시면 소리는 나지 않을거예요!)<br />
<a href="https://github.com/0pencoding/JavaCamp-Round5-Connect6">https://github.com/0pencoding/JavaCamp-Round5-Connect6</a>
<br /><br /></p>
:ET